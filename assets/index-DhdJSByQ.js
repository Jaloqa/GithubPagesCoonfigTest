import{r as m,b as ne,u as J,c as re,R as ce,d as ie,L as I,B as ae,e as le}from"./vendor-CV63PnOw.js";import{l as U}from"./socket-Co6MA4MW.js";import{P as de}from"./webrtc-C8QLckjl.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const u of r.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&s(u)}).observe(document,{childList:!0,subtree:!0});function t(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(n){if(n.ep)return;n.ep=!0;const r=t(n);fetch(n.href,r)}})();var Q={exports:{}},L={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ue=m,he=Symbol.for("react.element"),me=Symbol.for("react.fragment"),ge=Object.prototype.hasOwnProperty,fe=ue.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,_e={key:!0,ref:!0,__self:!0,__source:!0};function K(i,e,t){var s,n={},r=null,u=null;t!==void 0&&(r=""+t),e.key!==void 0&&(r=""+e.key),e.ref!==void 0&&(u=e.ref);for(s in e)ge.call(e,s)&&!_e.hasOwnProperty(s)&&(n[s]=e[s]);if(i&&i.defaultProps)for(s in e=i.defaultProps,e)n[s]===void 0&&(n[s]=e[s]);return{$$typeof:he,type:i,key:r,ref:u,props:n,_owner:fe.current}}L.Fragment=me;L.jsx=K;L.jsxs=K;Q.exports=L;var o=Q.exports,q={},G=ne;q.createRoot=G.createRoot,q.hydrateRoot=G.hydrateRoot;const pe="_homePage_1myg8_1",ve="_container_1myg8_25",ke="_title_1myg8_41",ye="_subtitle_1myg8_57",Ce="_connectionStatus_1myg8_71",xe="_errorMessage_1myg8_105",je="_formGroup_1myg8_125",be="_nameInput_1myg8_137",Se="_input_1myg8_145",we="_createButton_1myg8_187",Ne="_joinButton_1myg8_219",Re="_divider_1myg8_251",y={homePage:pe,container:ve,title:ke,subtitle:ye,connectionStatus:Ce,errorMessage:xe,formGroup:je,nameInput:be,input:Se,createButton:we,joinButton:Ne,divider:Re};class Te{constructor(){this.initialized=!1,this.roomId=null,this.onTrackCallbacks=new Map}async init(e){return console.log("MediasoupApi: инициализация отключена"),this.roomId=e,this.initialized=!0,!0}async getLocalStream(){return console.log("MediasoupApi: получение локального потока отключено"),null}async publishStream(){return console.log("MediasoupApi: публикация потока отключена"),!0}setOnTrackCallback(e,t){this.onTrackCallbacks.set(e,t)}async updateStreamStatus(){return console.log("MediasoupApi: обновление статуса медиа отключено"),!0}async request(e,t={}){return new Promise(s=>{try{d.emit(e,t,n=>{if(!n){console.warn(`Пустой ответ от сервера для запроса ${e}`),s({});return}s(n)})}catch(n){console.error(`Ошибка при выполнении запроса ${e}:`,n),s({error:n.message||"Неизвестная ошибка при отправке запроса"})}})}cleanup(){console.log("MediasoupApi: очистка ресурсов"),this.initialized=!1,this.roomId=null,this.onTrackCallbacks.clear()}}const N=new Te;class Ae{constructor(){this.socket=null,this.socketId=null,this.connected=!1,this.listeners=new Map,this.serverUrl="",this.connectionAttempts=0,this.maxConnectionAttempts=5}init(e=null){if(this.socket&&this.connected)return console.log("Сокет уже подключен"),this.socket;e&&(this.serverUrl=e),console.log("Инициализация сокета, подключение к:",this.serverUrl);try{this.socket&&(console.log("Закрываем существующий сокет"),this.socket.disconnect(),this.socket=null),this.socket=U(this.serverUrl,{transports:["polling"],timeout:3e4,reconnection:!0,reconnectionAttempts:3,reconnectionDelay:2e3,reconnectionDelayMax:1e4,autoConnect:!0,path:"/socket.io/",forceNew:!0,multiplex:!1,upgrade:!1,rememberUpgrade:!1,secure:!0,rejectUnauthorized:!1,withCredentials:!0,extraHeaders:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization, X-Requested-With"}}),this.socket.on("connect",()=>{console.log("Соединение установлено"),this.connected=!0,this.connectionAttempts=0}),this.socket.on("connect_error",t=>{console.error("Ошибка подключения:",t),this.connected=!1}),this.socket.on("disconnect",t=>{console.log("Соединение разорвано:",t),this.connected=!1}),this.socket.on("reconnect",t=>{console.log("Переподключение успешно, попытка:",t),this.connected=!0,this.connectionAttempts=0}),this.socket.on("error",t=>{console.error("Ошибка сокета:",t)}),this.socket.on("room-updated",t=>{console.log("Получено обновление комнаты:",t)}),this.socket.on("player-joined-video",({roomId:t,playerId:s})=>{console.log("Получен запрос на видео соединение от:",s,"для комнаты:",t),this.socket.emit("player-joined",s)}),this.socket.on("signal",({from:t,signal:s})=>{console.log("Получен WebRTC сигнал от:",t),this.trigger("signal",{from:t,signal:s})}),this.socket.on("all-players",t=>{console.log("Получен список всех игроков в комнате:",t),this.trigger("all-players",t)}),this.socket.on("webrtc-offer",async({offer:t,from:s})=>{console.log("Получено предложение WebRTC от:",s);try{const n=await N.handleOffer(s,t);console.log("Отправка ответа WebRTC к:",s),this.socket.emit("webrtc-answer",{answer:n,to:s})}catch(n){console.error("Ошибка обработки предложения WebRTC:",n),this.socket.emit("webrtc-error",{to:s,error:"Не удалось установить соединение"})}}),this.socket.on("webrtc-answer",async({answer:t,from:s})=>{console.log("Получен ответ WebRTC от:",s);try{await N.handleAnswer(s,t),console.log("Ответ WebRTC успешно обработан от:",s)}catch(n){console.error("Ошибка обработки ответа WebRTC:",n),this.socket.emit("webrtc-error",{to:s,error:"Не удалось установить соединение"})}}),this.socket.on("webrtc-ice-candidate",async({candidate:t,from:s})=>{console.log("Получен ICE кандидат от:",s);try{await N.handleIceCandidate(s,t),console.log("ICE кандидат успешно обработан от:",s)}catch(n){console.error("Ошибка обработки ICE кандидата:",n)}}),this.socket.on("webrtc-error",({error:t,from:s})=>{console.error("Получена ошибка WebRTC от:",s,t)})}catch(t){console.error("Ошибка при создании сокета:",t),alert("Не удалось подключиться к серверу. Пожалуйста, проверьте соединение и обновите страницу.")}return this.socket}async checkServerAvailability(){try{if(console.log("Проверка доступности сервера:",this.serverUrl),this.connected&&this.socket)return console.log("Соединение уже установлено, сервер доступен"),!0;const e=3e3;try{return new Promise(t=>{const s=U(this.serverUrl,{transports:["websocket","polling"],timeout:e,reconnection:!1,forceNew:!0}),n=setTimeout(()=>{console.warn("Таймаут проверки соединения"),s.disconnect(),t(!1)},e);s.on("connect",()=>{console.log("Тестовое соединение установлено"),clearTimeout(n),s.disconnect(),t(!0)}),s.on("connect_error",r=>{console.warn("Ошибка тестового соединения:",r),clearTimeout(n),s.disconnect(),t(!1)})})}catch(t){return console.error("Ошибка при проверке доступности сервера:",t),!1}}catch(e){return console.error("Общая ошибка при проверке доступности сервера:",e),!1}}createRoom(e){return!this.connected||!this.socket?(console.warn("Попытка создать комнату, но соединение не установлено"),!1):(this.socket.emit("create-room",{playerName:e}),!0)}joinRoom(e,t){return!this.connected||!this.socket?(console.warn("Попытка присоединиться к комнате, но соединение не установлено"),!1):(this.socket.emit("join-room",{roomCode:e,playerName:t}),!0)}startGame(e){return!this.connected||!this.socket?(console.warn("Попытка начать игру, но соединение не установлено"),!1):(this.socket.emit("start-game",{roomCode:e}),!0)}updateVideoStatus(e,t){if(!this.connected||!this.socket){console.warn("Попытка обновить статус видео, но соединение не установлено");return}console.log(`Отправка статуса видео: комната ${e}, включено: ${t}`),this.socket.emit("video-status",{roomCode:e,enabled:t})}setCharacter(e,t,s){return!this.connected||!this.socket?(console.warn("Попытка установить персонажа, но соединение не установлено"),!1):(this.socket.emit("set-character",{roomCode:e,targetPlayerId:t,character:s}),!0)}on(e,t){this.socket||this.init(),this.listeners.has(e)||this.listeners.set(e,[]),this.listeners.get(e).push(t),this.socket.on(e,t)}off(e,t){if(this.socket)if(t){this.socket.off(e,t);const s=this.listeners.get(e)||[],n=s.indexOf(t);n!==-1&&s.splice(n,1)}else(this.listeners.get(e)||[]).forEach(n=>{this.socket.off(e,n)}),this.listeners.delete(e)}removeAllListeners(){this.socket&&(this.listeners.forEach((e,t)=>{e.forEach(s=>{this.socket.off(t,s)})}),this.listeners.clear())}isConnected(){return this.connected}getSocketId(){var e;return(e=this.socket)==null?void 0:e.id}disconnect(){this.socket&&(N.stopAllConnections(),N.stopLocalStream(),this.socket.disconnect(),this.socket=null,this.connected=!1,this.socketId=null,this.listeners.clear())}leaveRoom(e){!this.connected||!this.socket||this.socket.emit("leave-room",{roomCode:e})}getPlayers(e){return!this.connected||!this.socket?(console.warn("Попытка получить список игроков, но соединение не установлено"),!1):(this.socket.emit("get-players",{roomCode:e}),!0)}emit(e,t){return!this.connected||!this.socket?(console.warn(`Попытка отправить событие ${e}, но соединение не установлено`),!1):(this.socket.emit(e,t),!0)}trigger(e,t){if(!this.listeners.has(e))return;(this.listeners.get(e)||[]).forEach(n=>{try{n(t)}catch(r){console.error(`Ошибка в обработчике события ${e}:`,r)}})}async initiateWebRTCConnection(e){try{const t=await N.createOffer(e);this.socket.emit("webrtc-offer",{offer:t,to:e})}catch(t){console.error("Ошибка инициализации WebRTC соединения:",t)}}onPlayerJoined(e){this.socket.on("player-joined",async t=>{console.log("Новый игрок присоединился:",t);try{await this.initiateWebRTCConnection(t.playerId),console.log("WebRTC соединение инициировано с:",t.playerId),e(t)}catch(s){console.error("Ошибка инициализации WebRTC соединения:",s)}})}onPlayerLeft(e){this.socket.on("player-left",t=>{console.log("Игрок покинул комнату:",t),N.closeConnection(t.playerId),console.log("WebRTC соединение закрыто с:",t.playerId),e(t)})}sendWebRTCOffer(e,t){if(!this.socket||!this.connected){console.error("Сокет не подключен");return}console.log("Отправка предложения WebRTC к:",e),this.socket.emit("webrtc-offer",{to:e,offer:t})}sendWebRTCAnswer(e,t){if(!this.socket||!this.connected){console.error("Сокет не подключен");return}console.log("Отправка ответа WebRTC к:",e),this.socket.emit("webrtc-answer",{to:e,answer:t})}sendWebRTCIceCandidate(e,t){if(!this.socket||!this.connected){console.error("Сокет не подключен");return}console.log("Отправка ICE кандидата к:",e),this.socket.emit("webrtc-ice-candidate",{to:e,candidate:t})}onWebRTCOffer(e){this.socket.on("webrtc-offer",async({from:t,offer:s})=>{try{const n=await N.createPeerConnection(t);await n.setRemoteDescription(new RTCSessionDescription(s));const r=await n.createAnswer();await n.setLocalDescription(r),this.sendWebRTCAnswer(t,r)}catch(n){console.error("Ошибка при обработке WebRTC предложения:",n)}})}onWebRTCAnswer(e){this.socket.on("webrtc-answer",async({from:t,answer:s})=>{try{const n=N.getPeerConnection(t);n&&await n.setRemoteDescription(new RTCSessionDescription(s))}catch(n){console.error("Ошибка при обработке WebRTC ответа:",n)}})}onWebRTCIceCandidate(e){this.socket.on("webrtc-ice-candidate",async({from:t,candidate:s})=>{try{const n=N.getPeerConnection(t);n&&await n.addIceCandidate(new RTCIceCandidate(s))}catch(n){console.error("Ошибка при обработке WebRTC ICE кандидата:",n)}})}offWebRTCOffer(e){this.socket&&this.socket.off("webrtc-offer",e)}offWebRTCAnswer(e){this.socket&&this.socket.off("webrtc-answer",e)}offWebRTCIceCandidate(e){this.socket&&this.socket.off("webrtc-ice-candidate",e)}offPlayerJoined(e){this.socket&&this.socket.off("player-joined",e)}getSocketState(){var e,t,s;return this.socket?{connected:this.socket.connected,connectionState:this.socket.connected?"connected":this.socket.disconnected?"disconnected":"connecting",id:this.socket.id,transportType:((s=(t=(e=this.socket.io)==null?void 0:e.engine)==null?void 0:t.transport)==null?void 0:s.name)||null}:{connected:!1,connectionState:"closed",id:null,transportType:null}}getSocketStateString(){const e=this.getSocketState();return`Сокет: ${e.connectionState} (ID: ${e.id||"нет"}, транспорт: ${e.transportType||"неизвестно"})`}logSocketState(){return console.log(this.getSocketStateString()),this.getSocketState()}}const d=new Ae,Ee=()=>{const[i,e]=m.useState(""),[t,s]=m.useState(""),[n,r]=m.useState(""),[u,g]=m.useState(!1),[C,P]=m.useState(!1),b=J();m.useEffect(()=>{d.init();const f=()=>{const _=d.isConnected();P(_),_?r(""):(console.log("Переподключение к серверу..."),r("Ожидание подключения к серверу. Убедитесь, что сервер запущен."))};f();const S=setInterval(f,3e3);return d.on("room-created",_=>{g(!1),console.log("Комната создана:",_),_.success?b(`/game?name=${encodeURIComponent(i)}&room=${encodeURIComponent(_.roomCode)}&host=true`):r(_.error||"Не удалось создать комнату")}),d.on("room-joined",_=>{g(!1),console.log("Присоединение к комнате:",_),_.success?b(`/game?name=${encodeURIComponent(i)}&room=${encodeURIComponent(t)}`):r(_.error||"Не удалось присоединиться к комнате")}),d.on("connect_error",_=>{console.error("Ошибка соединения Socket.IO:",_),r(`Ошибка соединения с сервером: ${_.message}`),g(!1)}),()=>{clearInterval(S),d.off("room-created"),d.off("room-joined"),d.off("connect_error")}},[b,i,t]);const $=()=>{if(!C){r("Нет соединения с сервером. Пожалуйста, подождите или перезагрузите страницу.");return}if(!i.trim()){r("Введите ваше имя");return}r(""),g(!0);try{console.log("Отправка запроса на создание комнаты:",i),d.createRoom(i)}catch(f){console.error("Ошибка при создании комнаты:",f),r(`Ошибка соединения с сервером: ${f.message}`),g(!1)}},R=()=>{if(!C){r("Нет соединения с сервером. Пожалуйста, подождите или перезагрузите страницу.");return}if(!i.trim()){r("Введите ваше имя");return}if(!t.trim()){r("Введите код комнаты");return}r(""),g(!0);try{console.log("Отправка запроса на присоединение к комнате:",t,i),d.joinRoom(t,i)}catch(f){console.error("Ошибка при присоединении к комнате:",f),r(`Ошибка соединения с сервером: ${f.message}`),g(!1)}};return o.jsx("div",{className:y.homePage,children:o.jsxs("div",{className:y.container,children:[o.jsx("h1",{className:y.title,children:"Who Am I?"}),o.jsx("p",{className:y.subtitle,children:"A fun game to play with your friends"}),!C&&o.jsx("div",{className:y.connectionStatus,children:"Connecting to server..."}),n&&o.jsx("div",{className:y.errorMessage,children:n}),o.jsx("div",{className:`${y.formGroup} ${y.nameInput}`,children:o.jsx("input",{type:"text",className:y.input,placeholder:"Enter name",value:i,onChange:f=>e(f.target.value),disabled:u||!C})}),o.jsx("div",{className:y.formGroup,children:o.jsx("button",{className:y.createButton,onClick:$,disabled:u||!C,children:u?"Creating...":"Create room"})}),o.jsx("div",{className:y.divider,children:"or"}),o.jsx("div",{className:y.formGroup,children:o.jsx("input",{type:"text",className:y.input,placeholder:"Room code",value:t,onChange:f=>s(f.target.value.toUpperCase()),disabled:u||!C})}),o.jsx("div",{className:y.formGroup,children:o.jsx("button",{className:y.joinButton,onClick:R,disabled:u||!C,children:u?"Joining...":"Join"})})]})})},Pe="_gamePage_1izas_1",ze="_gameContainer_1izas_23",Be="_header_1izas_37",$e="_title_1izas_49",Oe="_gameControls_1izas_61",Ve="_playerInfo_1izas_77",Ie="_startButton_1izas_87",We="_copyButton_1izas_87",Le="_backButton_1izas_155",Me="_errorActions_1izas_185",qe="_homeButton_1izas_199",De="_errorMessage_1izas_231",Ue="_retryButton_1izas_263",Ge="_loadingMessage_1izas_297",Fe="_spinnerContainer_1izas_329",He="_spinner_1izas_329",Je="_spin_1izas_329",Qe="_lobbyInfo_1izas_365",Ke="_gameArea_1izas_389",Xe="_gameContent_1izas_401",Ye="_gameDescription_1izas_411",Ze="_videoGrid_1izas_425",et="_videoBox_1izas_439",tt="_playerVideoContainer_1izas_459",ot="_videoWrapper_1izas_473",st="_playerVideo_1izas_459",nt="_placeholderVideo_1izas_509",rt="_placeholderContent_1izas_531",ct="_noVideoText_1izas_561",it="_userIcon_1izas_573",at="_playerName_1izas_595",lt="_playerCharacter_1izas_609",dt="_mediaControls_1izas_621",ut="_mutedIcon_1izas_633",ht="_videoDisabled_1izas_649",mt="_noVideoIcon_1izas_675",gt="_localVideo_1izas_687",ft="_videoControls_1izas_697",_t="_videoOn_1izas_713",pt="_videoOff_1izas_713",vt="_audioOn_1izas_713",kt="_audioOff_1izas_713",yt="_noPlayersMessage_1izas_797",Ct="_mediaButton_1izas_843",xt="_mediaButtonActive_1izas_869",jt="_mediaButtonDisabled_1izas_879",bt="_cameraOffOverlay_1izas_897",St="_cameraOffIcon_1izas_923",wt="_lobby_1izas_365",Nt="_streamError_1izas_961",Rt="_streamErrorIcon_1izas_993",Tt="_streamErrorText_1izas_1001",At="_altButton_1izas_1011",Et="_videoPlaceholder_1izas_1041",Pt="_errorModal_1izas_1103",zt="_errorContent_1izas_1129",Bt="_continueButton_1izas_1181",$t="_formButtons_1izas_1211",Ot="_assignButton_1izas_1277",Vt="_characterForm_1izas_1309",It="_videoStatus_1izas_1339",Wt="_videoStatusConnecting_1izas_1373",Lt="_videoStatusError_1izas_1381",Mt="_videoStatusActive_1izas_1389",qt="_streamIcon_1izas_1397",c={gamePage:Pe,gameContainer:ze,header:Be,title:$e,gameControls:Oe,playerInfo:Ve,startButton:Ie,copyButton:We,backButton:Le,errorActions:Me,homeButton:qe,errorMessage:De,retryButton:Ue,loadingMessage:Ge,spinnerContainer:Fe,spinner:He,spin:Je,lobbyInfo:Qe,gameArea:Ke,gameContent:Xe,gameDescription:Ye,videoGrid:Ze,videoBox:et,playerVideoContainer:tt,videoWrapper:ot,playerVideo:st,placeholderVideo:nt,placeholderContent:rt,noVideoText:ct,userIcon:it,playerName:at,playerCharacter:lt,mediaControls:dt,mutedIcon:ut,videoDisabled:ht,noVideoIcon:mt,localVideo:gt,videoControls:ft,videoOn:_t,videoOff:pt,audioOn:vt,audioOff:kt,noPlayersMessage:yt,mediaButton:Ct,mediaButtonActive:xt,mediaButtonDisabled:jt,cameraOffOverlay:bt,cameraOffIcon:St,lobby:wt,streamError:Nt,streamErrorIcon:Rt,streamErrorText:Tt,altButton:At,videoPlaceholder:Et,errorModal:Pt,errorContent:zt,continueButton:Bt,formButtons:$t,assignButton:Ot,characterForm:Vt,videoStatus:It,videoStatusConnecting:Wt,videoStatusError:Lt,videoStatusActive:Mt,streamIcon:qt};typeof window>"u"&&(window.global=window);typeof process>"u"&&(window.process=window.process||{},window.process.browser=!0,window.process.env=window.process.env||{});typeof Buffer>"u"&&(window.Buffer=window.Buffer||{from:i=>new Uint8Array(i),alloc:i=>new Uint8Array(i),allocUnsafe:i=>new Uint8Array(i),isBuffer:()=>!1});class Dt{constructor(){this.peers={},this.connectedPlayers=new Set,this.localStream=null,this.onRemoteStream=null,this.onRemoteStreamRemoved=null,this.myPlayerId=null,this.roomId=null,this.initialized=!1,this.animationFrames=[],this.canvasStreams={}}createPeer(e,t,s=null){if(console.log(`Создание WebRTC соединения с ${e} (инициатор: ${t})`),this.peers[e]){console.log(`Соединение с ${e} уже существует`);return}const n={initiator:t,trickle:!1,stream:this.localStream,config:{iceServers:[{urls:"stun:stun1.l.google.com:19302"},{urls:"stun:stun2.l.google.com:19302"},{urls:"stun:stun3.l.google.com:19302"},{urls:"stun:stun4.l.google.com:19302"},{urls:"stun:stun5.l.google.com:19302"},{urls:"stun:stun6.l.google.com:19302"},{urls:"stun:stun7.l.google.com:19302"},{urls:"stun:stun8.l.google.com:19302"},{urls:"stun:stun9.l.google.com:19302"},{urls:"stun:stun10.l.google.com:19302"},{urls:"stun:stun11.l.google.com:19302"},{urls:"stun:stun12.l.google.com:19302"},{urls:"stun:stun13.l.google.com:19302"},{urls:"stun:stun14.l.google.com:19302"},{urls:"stun:stun15.l.google.com:19302"},{urls:"stun:stun16.l.google.com:19302"},{urls:"stun:stun17.l.google.com:19302"},{urls:"stun:stun18.l.google.com:19302"},{urls:"stun:stun19.l.google.com:19302"},{urls:"stun:stun20.l.google.com:19302"}],iceTransportPolicy:"all",iceCandidatePoolSize:10}};try{const r=new de(n);return r.on("error",u=>{console.error(`Ошибка в соединении с ${e}:`,u),this.handlePeerError(e,u)}),r.on("connect",()=>{if(console.log(`Соединение установлено с ${e}`),this.connectedPlayers.add(e),this.localStream){const u=this.localStream.getVideoTracks()[0];u&&console.log(`Состояние видеотрека для ${e}:`,{enabled:u.enabled,readyState:u.readyState,muted:u.muted})}}),r.on("close",()=>{console.log(`Соединение закрыто с ${e}`),this.handlePeerClose(e)}),r.on("stream",u=>{if(console.log(`Получен поток от ${e}`),this.onRemoteStream){u.playerId=e;const g=u.getVideoTracks()[0];g&&console.log(`Состояние полученного видеотрека от ${e}:`,{enabled:g.enabled,readyState:g.readyState,muted:g.muted}),this.onRemoteStream(e,u)}}),r.on("signal",u=>{console.log(`Отправка сигнала к ${e}`),d.emit("signal",{to:e,signal:u})}),!t&&s&&r.signal(s),this.peers[e]=r,r}catch(r){console.error(`Ошибка при создании пира для ${e}:`,r),this.handlePeerError(e,r)}}handlePeerError(e,t){this.peers[e]&&(this.peers[e].destroy(),delete this.peers[e]),this.connectedPlayers.delete(e),this.onRemoteStreamRemoved&&this.onRemoteStreamRemoved(e)}handlePeerClose(e){delete this.peers[e],this.connectedPlayers.delete(e),this.onRemoteStreamRemoved&&this.onRemoteStreamRemoved(e)}async createCanvasStream(){const e=document.createElement("canvas");e.width=640,e.height=480;const t=e.getContext("2d");let s=0;const n="Нет камеры",r=()=>{t.fillStyle="#1a1625",t.fillRect(0,0,e.width,e.height);const g=4;t.strokeStyle=`hsl(${s}, 70%, 60%)`,t.lineWidth=g,t.strokeRect(g/2,g/2,e.width-g,e.height-g),s=(s+1)%360,t.font="48px Arial",t.fillStyle="#ffffff",t.textAlign="center",t.textBaseline="middle",t.fillText(n,e.width/2,e.height/2),t.font="36px Arial",t.fillText("🎥",e.width/2,e.height/2-60);const C=requestAnimationFrame(r);this.animationFrames.push(C)};r();const u=e.captureStream(30);return u.isCanvasStream=!0,u}setupSocketListeners(e){d.off("signal"),d.off("player-joined"),d.off("player-left"),d.off("all-players"),d.emit("join-room",{roomId:e}),d.on("all-players",t=>{console.log("Получен список игроков в комнате:",t),t.forEach(s=>{s!==this.myPlayerId&&!this.connectedPlayers.has(s)&&(console.log(`Создаем соединение с игроком ${s}`),this.createPeer(s,!0))})}),d.on("player-joined",t=>{console.log("Новый игрок присоединился:",t),t!==this.myPlayerId&&!this.connectedPlayers.has(t)&&(console.log(`Создаем соединение с новым игроком ${t}`),this.createPeer(t,!1))}),d.on("player-left",t=>{console.log("Игрок вышел:",t),this.connectedPlayers.delete(t),this.peers[t]&&(this.peers[t].destroy(),delete this.peers[t]),this.onRemoteStreamRemoved&&this.onRemoteStreamRemoved(t)}),d.on("signal",({from:t,signal:s})=>{if(console.log("Получен сигнал от:",t),this.peers[t])if(this.peers[t].connected)try{console.log(`Обработка сигнала для существующего соединения с ${t}`),this.peers[t].signal(s)}catch(n){console.error("Ошибка при обработке сигнала:",n),this.handlePeerError(t,n),this.createPeer(t,!1,s)}else console.warn("Соединение с",t,"не установлено или закрыто. Создаём новое соединение."),this.createPeer(t,!1,s);else console.warn("Соединение с",t,"не найдено. Создаём новое соединение."),this.createPeer(t,!1,s)})}toggleVideo(e){if(this.localStream){const t=this.localStream.getVideoTracks();if(t.length>0)return t.forEach(s=>{s.enabled=e}),!0}return!1}toggleAudio(e){if(this.localStream){const t=this.localStream.getAudioTracks();if(t.length>0)return t.forEach(s=>{s.enabled=e}),!0}return!1}isVideoEnabled(){return this.localStream&&this.localStream.getVideoTracks().length>0}isAudioEnabled(){return this.localStream&&this.localStream.getAudioTracks().length>0}stop(){this.localStream&&(this.localStream.getTracks().forEach(t=>t.stop()),this.localStream=null),Object.values(this.peers).forEach(t=>{t&&typeof t.destroy=="function"&&t.destroy()}),this.peers={},d.off("signal"),d.off("player-joined"),d.off("player-left"),d.off("all-players"),this.animationFrames.forEach(t=>{cancelAnimationFrame(t)}),this.animationFrames=[],document.querySelectorAll('canvas[id^="canvas-"]').forEach(t=>{t.remove()}),this.canvasStreams={},this.initialized=!1,this.connectedPlayers.clear(),this.roomId=null}getStreamInfo(e){return e?{isCanvas:e.isCanvasStream||!1,canvasId:e.canvasId||null,videoTracks:e.getVideoTracks().length,audioTracks:e.getAudioTracks().length}:null}async init(e){console.log("Инициализация Video API с WebRTC для комнаты:",e),this.roomId=e,this.localStream&&(this.localStream.getTracks().forEach(n=>n.stop()),this.localStream=null);let t=0;const s=3;for(;t<s;)try{console.log(`Попытка ${t+1}/${s} получить видеопоток с камеры...`);const n=await navigator.mediaDevices.getUserMedia({video:{width:{ideal:640},height:{ideal:480},frameRate:{ideal:30}},audio:!1});console.log("Медиапоток получен успешно: видео треков:",n.getVideoTracks().length,", аудио треков:",n.getAudioTracks().length);const r=n.getVideoTracks()[0];console.log("Параметры видеотрека:",r.getSettings()),this.localStream=n;break}catch(n){if(console.error(`Попытка ${t+1}/${s} не удалась:`,n),n.name==="NotReadableError"&&t<s-1){console.log("Устройство занято, ждем 2 секунды перед следующей попыткой..."),await new Promise(r=>setTimeout(r,2e3)),t++;continue}console.error("Не удалось получить видеопоток с камеры:",n),console.log("Создаем поток из канваса вместо камеры"),this.localStream=await this.createCanvasStream();break}return this.initialized=!0,this.localStream}}const B=new Dt,F=({stream:i,playerId:e,playerName:t,character:s,isCurrentPlayer:n,isVideoEnabled:r=!0,isAudioEnabled:u=!0,muted:g})=>{const C=m.useRef(null),[P,b]=m.useState(!1),[$,R]=m.useState(null),[f,S]=m.useState("connecting");m.useEffect(()=>{if(console.log("PlayerVideo: Обновление потока для",e,i?`Видеотреков: ${i.getVideoTracks().length}, Аудиотреков: ${i.getAudioTracks().length}`:"нет потока"),!i||!C.current){console.log("Нет потока для игрока",e,"или ссылки на видеоэлемент");return}const p=C.current,T=i.getVideoTracks()[0];T&&console.log("Видеотрек для",e,":",{enabled:T.enabled,active:T.active,type:T.kind,readyState:T.readyState,muted:T.muted}),p.srcObject&&(console.log("Очищаем предыдущий источник видео для",e),p.srcObject=null),p.srcObject=i;const a=()=>{console.log("Видео успешно запущено для",e)},A=z=>{console.error("Ошибка воспроизведения видео:",z),setTimeout(()=>{p.paused&&(console.log("Пробуем перезапустить воспроизведение для",e),p.play().catch(M=>{console.error("Ошибка при перезапуске воспроизведения:",M)}))},1e3)},W=()=>{console.log("Метаданные видео загружены для",e),p.play().catch(z=>{console.error("Ошибка при запуске воспроизведения:",z)})};return p.addEventListener("play",a),p.addEventListener("error",A),p.addEventListener("loadedmetadata",W),()=>{console.log("Очистка компонента PlayerVideo для",e),p.removeEventListener("play",a),p.removeEventListener("error",A),p.removeEventListener("loadedmetadata",W),p.srcObject&&(p.srcObject.getTracks().forEach(z=>z.stop()),p.srcObject=null)}},[i,e]);const _=p=>{console.error(`Ошибка воспроизведения видео для ${e}:`,p),R(p.message||"Ошибка воспроизведения видео"),b(!1),S("error")},O=()=>{console.log(`Видео успешно запущено для ${e}`),S("active"),b(!0)};return i&&(P||i.getVideoTracks().length>0||i.isCanvasStream),o.jsxs("div",{className:c.playerVideoContainer,children:[i?o.jsxs("div",{className:c.videoWrapper,children:[o.jsx("video",{ref:C,className:c.playerVideo,autoPlay:!0,playsInline:!0,muted:g,onError:_,onPlay:O}),o.jsx("div",{className:`${c.videoStatus} ${c[`videoStatus${f.charAt(0).toUpperCase()+f.slice(1)}`]}`,children:o.jsxs("span",{className:c.streamIcon,children:[f==="connecting"&&"⌛",f==="active"&&"✓",f==="error"&&"✗"]})})]}):o.jsx("div",{className:c.placeholderVideo,children:o.jsxs("div",{className:c.placeholderContent,children:[o.jsx("span",{role:"img","aria-label":"user",children:"👤"}),o.jsx("div",{className:c.noVideoText,children:$?"Ошибка видео":"Подключение..."}),o.jsx("div",{className:c.spinnerContainer,children:o.jsx("div",{className:c.spinner})})]})}),!r&&i&&o.jsx("div",{className:c.videoDisabled,children:o.jsx("span",{className:c.noVideoIcon,children:"🎥"})}),o.jsxs("div",{className:c.playerInfo,children:[o.jsxs("div",{className:c.playerName,children:[t||`Игрок ${(e==null?void 0:e.substring(0,4))||"неизвестный"}`," ",n&&" (Вы)"]}),s&&o.jsxs("div",{className:c.playerCharacter,children:["Персонаж: ",n?"???":s]}),!u&&o.jsx("div",{className:c.mediaControls,children:o.jsx("span",{className:c.mutedIcon,children:"🔇"})})]})]})},Ut=()=>{var D;const i=re(),e=J(),[t,s]=m.useState(""),[n,r]=m.useState("connecting"),[u,g]=m.useState(""),[C,P]=m.useState(null),[b,$]=m.useState(""),[R,f]=m.useState(!0),[S,_]=m.useState(!0),O=m.useRef(null),[p,T]=m.useState({}),[a,A]=m.useState({roomCode:"",players:[],isHost:!1,playerName:"",gameStarted:!1,playerId:"",characterAssignments:{},characters:{}}),W=["Я человек?","Я вымышленный персонаж?","Я живу в наше время?","Я известная личность?","Я спортсмен?","Я актер/актриса?","Я музыкант?","Я политик?","Я старше 50 лет?","Я мужчина?","Я женщина?"],z=l=>{if(!l)return"Неизвестная ошибка при доступе к камере";switch(l.name){case"NotAllowedError":return"Доступ к камере запрещен. Пожалуйста, разрешите доступ к камере в настройках браузера и перезагрузите страницу.";case"NotFoundError":return"Камера не найдена. Проверьте, что камера подключена и работает.";case"NotReadableError":return"Камера уже используется другим приложением. Закройте другие приложения, использующие камеру, и перезагрузите страницу.";case"OverconstrainedError":return"Запрошенное разрешение камеры недоступно. Попробуйте с меньшими параметрами.";case"AbortError":return"Операция прервана. Попробуйте еще раз.";case"SecurityError":return"Использование камеры заблокировано настройками безопасности браузера.";case"TypeError":return"Неподдерживаемый тип параметров для доступа к камере.";default:return`Ошибка при доступе к камере: ${l.message||l.name}`}};m.useEffect(()=>{const l=new URLSearchParams(i.search),x=l.get("name"),w=l.get("room"),v=l.get("host")==="true";if(!x||!w){e("/");return}A(h=>({...h,playerName:x,roomCode:w,isHost:v}))},[i.search,e]),m.useEffect(()=>{if(!a.roomCode||!a.playerName)return;console.log("Инициализация соединения с комнатой:",a.roomCode),r("connecting"),d.init();const l=h=>{console.log("Получено обновление комнаты:",h);const k=h.players.filter((j,te,oe)=>te===oe.findIndex(se=>se.id===j.id));A(j=>({...j,players:k,gameStarted:h.gameStarted||j.gameStarted,characterAssignments:h.characterAssignments||j.characterAssignments,characters:h.characters||j.characters}))},x=h=>{console.log("Игра началась:",h),A(k=>({...k,gameStarted:!0,characterAssignments:h.characterAssignments}))},w=h=>{console.log("Получен персонаж:",h),A(k=>({...k,characters:{...k.characters,[d.getSocketId()]:h.character}}))},v=()=>{console.log("Соединение установлено"),r("connected"),s(""),a.isHost?d.createRoom(a.playerName):d.joinRoom(a.roomCode,a.playerName)};return d.on("room-updated",l),d.on("game-started",x),d.on("character-assigned",w),d.on("connect",v),d.isConnected()&&v(),()=>{d.off("room-updated",l),d.off("game-started",x),d.off("character-assigned",w),d.off("connect",v)}},[a.roomCode,a.playerName,a.isHost]),m.useEffect(()=>{if(!a.roomCode||!a.playerName||n!=="connected")return;console.log("Инициализация видео для комнаты:",a.roomCode);const l=(v,h)=>{console.log("Получен удаленный поток от:",v,h?`Видеотреков: ${h.getVideoTracks().length}, Аудиотреков: ${h.getAudioTracks().length}`:"Нет потока"),h&&(h.getTracks().length>0||h.isCanvasStream?T(k=>({...k,[v]:h})):console.warn(`Поток от ${v} не содержит треков и не является canvas-потоком, игнорируем`))},x=v=>{console.log("Удален удаленный поток от:",v),T(h=>{const k={...h};return delete k[v],k})},w=async(v=1)=>{try{console.log(`Попытка инициализации видео ${v}/3`);const h=await B.init(a.roomCode,l,x);console.log("Локальный поток инициализирован:",h?`Видеотреков: ${h.getVideoTracks().length}, Аудиотреков: ${h.getAudioTracks().length}`:"Нет потока"),O.current&&(O.current.srcObject=h);const k=d.getSocketId();return k&&A(j=>({...j,playerId:k})),f(B.isVideoEnabled()),_(B.isAudioEnabled()),!0}catch(h){if(console.error(`Ошибка при инициализации видео (попытка ${v}/3):`,h),v<3)return console.log("Повторная попытка через 1 секунду..."),await new Promise(j=>setTimeout(j,1e3)),w(v+1);s(z(h)),f(!1),_(!1);const k=d.getSocketId();return k&&A(j=>({...j,playerId:k})),!1}};return w(),()=>{B.stop()}},[a.roomCode,a.playerName,n]);const M=()=>{a.isHost&&d.startGame(a.roomCode)},X=l=>{if(!b.trim()){s("Введите имя персонажа");return}d.emit("assign-character",{roomCode:a.roomCode,targetPlayerId:l,character:b}),$(""),P(null)},Y=()=>{const l=!R;B.toggleVideo(l),f(l)},Z=()=>{const l=!S;B.toggleAudio(l),_(l)},ee=()=>{B.stop(),e("/")};return o.jsxs("div",{className:c.gamePage,children:[o.jsxs("div",{className:c.gameHeader,children:[o.jsxs("div",{className:c.roomInfo,children:[o.jsxs("h2",{children:["Комната: ",a.roomCode]}),n==="connecting"&&o.jsx("div",{className:c.connecting,children:"Подключение..."}),n==="error"&&o.jsx("div",{className:c.error,children:t||"Ошибка подключения"})]}),o.jsxs("div",{className:c.gameControls,children:[a.isHost&&!a.gameStarted&&o.jsx("button",{className:c.startButton,onClick:M,children:"Начать игру"}),o.jsx("button",{className:c.leaveButton,onClick:ee,children:"Выйти"})]})]}),o.jsxs("div",{className:c.gameContent,children:[o.jsxs("div",{className:c.videoGrid,children:[o.jsxs("div",{className:`${c.videoBox} ${c.localVideo}`,children:[o.jsx(F,{stream:((D=O.current)==null?void 0:D.srcObject)||null,playerId:a.playerId,playerName:a.playerName,character:a.characters[a.playerId],isCurrentPlayer:!0,isVideoEnabled:R,isAudioEnabled:S}),o.jsxs("div",{className:c.videoControls,children:[o.jsx("button",{className:R?c.videoOn:c.videoOff,onClick:Y,title:R?"Выключить камеру":"Включить камеру",children:R?"🎥":"🚫"}),o.jsx("button",{className:S?c.audioOn:c.audioOff,onClick:Z,title:S?"Выключить микрофон":"Включить микрофон",children:S?"🔊":"🔇"})]})]}),a.players.filter(l=>l.id!==a.playerId).filter((l,x,w)=>x===w.findIndex(v=>v.id===l.id)).map(l=>o.jsxs("div",{className:c.videoBox,children:[o.jsx(F,{stream:p[l.id],playerId:l.id,playerName:l.name,character:a.characters[l.id],isCurrentPlayer:!1,isVideoEnabled:!0,isAudioEnabled:!0}),a.gameStarted&&a.characterAssignments[a.playerId]===l.id&&o.jsx("div",{className:c.assignCharacter,children:C===l.id?o.jsxs("div",{className:c.characterForm,children:[o.jsx("input",{type:"text",value:b,onChange:x=>$(x.target.value),placeholder:"Введите персонажа"}),o.jsxs("div",{className:c.formButtons,children:[o.jsx("button",{onClick:()=>X(l.id),children:"Назначить"}),o.jsx("button",{onClick:()=>P(null),children:"Отмена"})]})]}):o.jsx("button",{onClick:()=>P(l.id),className:c.assignButton,children:"Назначить персонажа"})})]},`player-${l.id}`))]}),o.jsx("div",{className:c.gameSidebar,children:a.gameStarted?o.jsxs(o.Fragment,{children:[o.jsxs("div",{className:c.gameInfo,children:[o.jsx("h3",{children:"Игра началась!"}),a.characters[a.playerId]?o.jsxs("p",{children:["Ваш персонаж: ",o.jsx("strong",{children:"???"})]}):o.jsx("p",{children:"Ожидайте, пока вам загадают персонажа"})]}),o.jsxs("div",{className:c.hintQuestions,children:[o.jsx("h3",{children:"Подсказки для вопросов:"}),o.jsx("ul",{children:W.map((l,x)=>o.jsx("li",{children:l},x))})]}),o.jsxs("div",{className:c.notes,children:[o.jsx("h3",{children:"Ваши заметки:"}),o.jsx("textarea",{value:u,onChange:l=>g(l.target.value),placeholder:"Записывайте здесь свои догадки...",className:c.notesArea})]})]}):o.jsxs("div",{className:c.waitingRoom,children:[o.jsx("h3",{children:"Ожидание игроков"}),o.jsxs("p",{children:["В комнате ",a.players.length," игроков"]}),o.jsx("ul",{className:c.playersList,children:a.players.map((l,x)=>o.jsxs("li",{children:[l.name," ",l.isHost&&" (Хост)",l.id===a.playerId&&" (Вы)"]},`player-list-${l.id}-${x}`))}),a.isHost&&a.players.length>=2?o.jsx("p",{children:"Можно начинать игру!"}):a.isHost?o.jsx("p",{children:"Нужно минимум 2 игрока для начала игры"}):o.jsx("p",{children:"Ожидайте, когда хост начнет игру"})]})})]}),t&&o.jsx("div",{className:c.errorModal,children:o.jsxs("div",{className:c.errorContent,children:[o.jsx("h3",{children:"Произошла ошибка"}),o.jsx("p",{children:t}),o.jsx("div",{className:c.errorActions,children:o.jsx("button",{onClick:()=>s(""),className:c.continueButton,children:"Продолжить без камеры"})})]})}),o.jsx("video",{ref:O,autoPlay:!0,playsInline:!0,muted:!0,style:{display:"none"}})]})},Gt={main:{path:"/",element:o.jsx(Ee,{})},game:{path:"/game",element:o.jsx(Ut,{})}},Ft=()=>o.jsx(m.Suspense,{fallback:o.jsx("div",{children:"Loading..."}),children:o.jsx(ce,{children:Object.values(Gt).map(({path:i,element:e})=>o.jsx(ie,{path:i,element:e},i))})}),Ht="_header_ksqj1_1",Jt="_container_ksqj1_15",Qt="_logo_ksqj1_29",Kt="_icon_ksqj1_45",Xt="_text_ksqj1_53",Yt="_actions_ksqj1_61",Zt="_connectButton_ksqj1_71",eo="_createButton_ksqj1_99",E={header:Ht,container:Jt,logo:Qt,icon:Kt,text:Xt,actions:Yt,connectButton:Zt,createButton:eo},to=()=>o.jsx("header",{className:E.header,children:o.jsxs("div",{className:E.container,children:[o.jsxs(I,{to:"/",className:E.logo,children:[o.jsx("span",{className:E.icon,children:"📋"}),o.jsx("span",{className:E.text,children:"Who Am I?"})]}),o.jsxs("div",{className:E.actions,children:[o.jsx("button",{className:E.connectButton,children:"Connect"}),o.jsx(I,{to:"/",className:E.createButton,children:"Create"})]})]})}),oo="_footer_4qbq9_1",so="_container_4qbq9_15",no="_copyright_4qbq9_35",ro="_links_4qbq9_47",co="_social_4qbq9_79",V={footer:oo,container:so,copyright:no,links:ro,social:co},io=()=>o.jsx("footer",{className:V.footer,children:o.jsxs("div",{className:V.container,children:[o.jsx("div",{className:V.copyright,children:o.jsx("p",{children:"© 2023 Who Am I. All rights reserved."})}),o.jsxs("div",{className:V.links,children:[o.jsx(I,{to:"/",children:"Home"}),o.jsx(I,{to:"/about",children:"About"}),o.jsx(I,{to:"/privacy",children:"Privacy"})]}),o.jsxs("div",{className:V.social,children:[o.jsx("a",{href:"https://github.com",target:"_blank",rel:"noopener noreferrer","aria-label":"GitHub",children:o.jsx("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",children:o.jsx("path",{d:"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"})})}),o.jsx("a",{href:"https://twitter.com",target:"_blank",rel:"noopener noreferrer","aria-label":"Twitter",children:o.jsx("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",children:o.jsx("path",{d:"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"})})})]})]})}),ao="_layout_kkmdn_1",lo="_main_kkmdn_19",H={layout:ao,main:lo},uo=({children:i})=>o.jsxs("div",{className:H.layout,children:[o.jsx(to,{}),o.jsx("main",{className:H.main,children:i}),o.jsx(io,{})]});function ho(){return o.jsx(ae,{basename:"/GithubPagesCoonfigTest",children:o.jsx(uo,{children:o.jsx(Ft,{})})})}q.createRoot(document.getElementById("root")).render(o.jsx(le.StrictMode,{children:o.jsx(ho,{})}));
//# sourceMappingURL=index-DhdJSByQ.js.map
