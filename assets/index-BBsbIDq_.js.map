{"version":3,"file":"index-BBsbIDq_.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/shared/api/mediasoupApi.js","../../src/shared/api/socketApi.js","../../src/pages/HomePage/HomePage.jsx","../../src/shared/api/videoApi.js","../../src/pages/GamePage/PlayerVideo.jsx","../../src/pages/GamePage/GamePage.jsx","../../src/shared/config/routeConfig.jsx","../../src/app/providers/router/AppRouter.jsx","../../src/widgets/Header/Header.jsx","../../src/widgets/Footer/Footer.jsx","../../src/widgets/Layout/Layout.jsx","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import socketApi from './socketApi';\n\nclass MediasoupApi {\n  constructor() {\n    this.initialized = false;\n    this.roomId = null;\n    this.onTrackCallbacks = new Map();\n  }\n\n  // Заглушка для инициализации\n  async init(roomId) {\n    console.log('MediasoupApi: инициализация отключена');\n    this.roomId = roomId;\n    this.initialized = true;\n    return true;\n  }\n\n  // Заглушка для получения локального потока\n  async getLocalStream() {\n    console.log('MediasoupApi: получение локального потока отключено');\n    return null;\n  }\n\n  // Заглушка для публикации потока\n  async publishStream() {\n    console.log('MediasoupApi: публикация потока отключена');\n    return true;\n  }\n\n  // Заглушка для установки колбэка на получение трека\n  setOnTrackCallback(peerId, callback) {\n    this.onTrackCallbacks.set(peerId, callback);\n  }\n\n  // Заглушка для обновления состояния потока\n  async updateStreamStatus() {\n    console.log('MediasoupApi: обновление статуса медиа отключено');\n    return true;\n  }\n\n  // Вспомогательная функция для отправки запросов на сервер\n  async request(type, data = {}) {\n    return new Promise((resolve) => {\n      try {\n        socketApi.emit(type, data, (response) => {\n          if (!response) {\n            console.warn(`Пустой ответ от сервера для запроса ${type}`);\n            resolve({});\n            return;\n          }\n          resolve(response);\n        });\n      } catch (error) {\n        console.error(`Ошибка при выполнении запроса ${type}:`, error);\n        resolve({ error: error.message || 'Неизвестная ошибка при отправке запроса' });\n      }\n    });\n  }\n\n  // Очистка ресурсов\n  cleanup() {\n    console.log('MediasoupApi: очистка ресурсов');\n    this.initialized = false;\n    this.roomId = null;\n    this.onTrackCallbacks.clear();\n  }\n}\n\nconst mediasoupApi = new MediasoupApi();\nexport default mediasoupApi; ","import { io } from 'socket.io-client';\nimport mediasoupApi from './mediasoupApi';\n\nclass SocketApi {\n  constructor() {\n    this.socket = null;\n    this.socketId = null;\n    this.connected = false;\n    this.listeners = new Map();\n    this.serverUrl = import.meta.env.VITE_API_URL || 'http://localhost:3002';\n    this.connectionAttempts = 0;\n    this.maxConnectionAttempts = 5;\n  }\n\n  // Инициализация сокета\n  init(serverUrl = null) {\n    if (this.socket && this.connected) {\n      console.log('Сокет уже подключен');\n      return this.socket;\n    }\n    \n    // Если передан URL, используем его\n    if (serverUrl) {\n      this.serverUrl = serverUrl;\n    }\n    \n    console.log('Инициализация сокета, подключение к:', this.serverUrl);\n    \n    // Проверка доступности сервера перед подключением\n    this.checkServerAvailability()\n      .then(available => {\n        if (!available) {\n          console.warn('Предварительная проверка показала, что сервер недоступен');\n        }\n      })\n      .catch(err => {\n        console.error('Ошибка при проверке доступности сервера:', err);\n      });\n    \n    // Создаем новое подключение\n    try {\n      // Если есть существующее соединение, закрываем его\n      if (this.socket) {\n        console.log('Закрываем существующий сокет');\n        this.socket.disconnect();\n        this.socket = null;\n      }\n      \n      // Создаем новый сокет\n      this.socket = io(this.serverUrl, {\n        transports: ['websocket', 'polling'],\n        timeout: 20000,\n        reconnection: true,\n        reconnectionAttempts: 5,\n        reconnectionDelay: 1000,\n        reconnectionDelayMax: 5000,\n        autoConnect: true,\n        path: '/socket.io/',\n        forceNew: true,\n        multiplex: false,\n        upgrade: true,\n        rememberUpgrade: true,\n        secure: true,\n        rejectUnauthorized: false,\n        withCredentials: true,\n        extraHeaders: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      \n      // Обработка событий соединения\n      this.socket.on('connect', () => {\n        console.log('Сокет подключен, ID:', this.socket.id);\n        this.connected = true;\n        this.socketId = this.socket.id;\n        this.connectionAttempts = 0;\n      });\n      \n      this.socket.on('connect_error', (error) => {\n        console.error('Ошибка подключения:', error);\n        this.connected = false;\n        this.connectionAttempts++;\n        \n        if (this.connectionAttempts <= this.maxConnectionAttempts) {\n          console.log(`Повторная попытка подключения ${this.connectionAttempts} из ${this.maxConnectionAttempts}...`);\n          setTimeout(() => {\n            this.socket.connect();\n          }, 1000 * this.connectionAttempts);\n        } else {\n          console.error('Превышено максимальное количество попыток подключения');\n          alert('Ошибка подключения к серверу. Пожалуйста, убедитесь, что сервер запущен и обновите страницу.');\n        }\n      });\n      \n      this.socket.on('disconnect', (reason) => {\n        console.log('Сокет отключен, причина:', reason);\n        this.connected = false;\n      });\n      \n      this.socket.on('reconnect', (attemptNumber) => {\n        console.log('Повторное подключение установлено, попытка #', attemptNumber);\n        this.connected = true;\n      });\n      \n      this.socket.on('reconnect_error', (error) => {\n        console.error('Ошибка повторного подключения:', error);\n      });\n      \n      this.socket.on('reconnect_failed', () => {\n        console.error('Все попытки повторного подключения не удались');\n      });\n      \n      // Обработка обновлений комнаты\n      this.socket.on('room-updated', (data) => {\n        console.log('Получено обновление комнаты:', data);\n      });\n      \n      // Обработка запросов видео соединения\n      this.socket.on('player-joined-video', ({ roomId, playerId }) => {\n        console.log('Получен запрос на видео соединение от:', playerId, 'для комнаты:', roomId);\n        // Эмитим событие присоединения для нашего videoApi\n        this.socket.emit('player-joined', playerId);\n      });\n      \n      // Обработка сигналов WebRTC\n      this.socket.on('signal', ({ from, signal }) => {\n        console.log('Получен WebRTC сигнал от:', from);\n        this.trigger('signal', { from, signal });\n      });\n      \n      // Получение списка всех игроков в комнате\n      this.socket.on('all-players', (players) => {\n        console.log('Получен список всех игроков в комнате:', players);\n        this.trigger('all-players', players);\n      });\n      \n      // Обработка WebRTC сигналов\n      this.socket.on('webrtc-offer', async ({ offer, from }) => {\n        console.log('Получено предложение WebRTC от:', from);\n        try {\n          const answer = await mediasoupApi.handleOffer(from, offer);\n          console.log('Отправка ответа WebRTC к:', from);\n          this.socket.emit('webrtc-answer', { answer, to: from });\n        } catch (error) {\n          console.error('Ошибка обработки предложения WebRTC:', error);\n          // Отправляем уведомление об ошибке\n          this.socket.emit('webrtc-error', { \n            to: from, \n            error: 'Не удалось установить соединение' \n          });\n        }\n      });\n\n      this.socket.on('webrtc-answer', async ({ answer, from }) => {\n        console.log('Получен ответ WebRTC от:', from);\n        try {\n          await mediasoupApi.handleAnswer(from, answer);\n          console.log('Ответ WebRTC успешно обработан от:', from);\n        } catch (error) {\n          console.error('Ошибка обработки ответа WebRTC:', error);\n          // Отправляем уведомление об ошибке\n          this.socket.emit('webrtc-error', { \n            to: from, \n            error: 'Не удалось установить соединение' \n          });\n        }\n      });\n\n      this.socket.on('webrtc-ice-candidate', async ({ candidate, from }) => {\n        console.log('Получен ICE кандидат от:', from);\n        try {\n          await mediasoupApi.handleIceCandidate(from, candidate);\n          console.log('ICE кандидат успешно обработан от:', from);\n        } catch (error) {\n          console.error('Ошибка обработки ICE кандидата:', error);\n        }\n      });\n\n      this.socket.on('webrtc-error', ({ error, from }) => {\n        console.error('Получена ошибка WebRTC от:', from, error);\n        // Здесь можно добавить обработку ошибок на уровне UI\n      });\n    } catch (error) {\n      console.error('Ошибка при создании сокета:', error);\n      alert('Не удалось подключиться к серверу. Пожалуйста, проверьте соединение и обновите страницу.');\n    }\n    \n    return this.socket;\n  }\n\n  // Метод для проверки доступности сервера\n  async checkServerAvailability() {\n    try {\n      console.log('Проверка доступности сервера:', this.serverUrl);\n      \n      // Сначала проверяем, есть ли уже соединение\n      if (this.connected && this.socket) {\n        console.log('Соединение уже установлено, сервер доступен');\n        return true;\n      }\n      \n      // Устанавливаем таймаут для проверки\n      const timeout = 3000; // 3 секунды\n      \n      try {\n        // Простое подключение через Socket.IO для проверки\n        return new Promise((resolve) => {\n          // Создаем временное соединение для проверки\n          const testSocket = io(this.serverUrl, {\n            transports: ['websocket', 'polling'],\n            timeout: timeout,\n            reconnection: false,\n            forceNew: true\n          });\n          \n          // Установим таймаут для соединения\n          const connectionTimeout = setTimeout(() => {\n            console.warn('Таймаут проверки соединения');\n            testSocket.disconnect();\n            resolve(false);\n          }, timeout);\n          \n          testSocket.on('connect', () => {\n            console.log('Тестовое соединение установлено');\n            clearTimeout(connectionTimeout);\n            testSocket.disconnect();\n            resolve(true);\n          });\n          \n          testSocket.on('connect_error', (error) => {\n            console.warn('Ошибка тестового соединения:', error);\n            clearTimeout(connectionTimeout);\n            testSocket.disconnect();\n            resolve(false);\n          });\n        });\n      } catch (error) {\n        console.error('Ошибка при проверке доступности сервера:', error);\n        return false;\n      }\n    } catch (error) {\n      console.error('Общая ошибка при проверке доступности сервера:', error);\n      return false;\n    }\n  }\n\n  // Создание комнаты\n  createRoom(playerName) {\n    if (!this.connected || !this.socket) {\n      console.warn('Попытка создать комнату, но соединение не установлено');\n      return false;\n    }\n\n    this.socket.emit('create-room', { playerName });\n    return true;\n  }\n\n  // Присоединение к комнате\n  joinRoom(roomCode, playerName) {\n    if (!this.connected || !this.socket) {\n      console.warn('Попытка присоединиться к комнате, но соединение не установлено');\n      return false;\n    }\n\n    this.socket.emit('join-room', { roomCode, playerName });\n    return true;\n  }\n\n  // Начало игры\n  startGame(roomCode) {\n    if (!this.connected || !this.socket) {\n      console.warn('Попытка начать игру, но соединение не установлено');\n      return false;\n    }\n\n    this.socket.emit('start-game', { roomCode });\n    return true;\n  }\n\n  // Обновление статуса видео\n  updateVideoStatus(roomCode, enabled) {\n    if (!this.connected || !this.socket) {\n      console.warn('Попытка обновить статус видео, но соединение не установлено');\n      return;\n    }\n\n    console.log(`Отправка статуса видео: комната ${roomCode}, включено: ${enabled}`);\n    this.socket.emit('video-status', { roomCode, enabled });\n  }\n\n  // Установка персонажа для игрока\n  setCharacter(roomCode, targetPlayerId, character) {\n    if (!this.connected || !this.socket) {\n      console.warn('Попытка установить персонажа, но соединение не установлено');\n      return false;\n    }\n\n    this.socket.emit('set-character', { roomCode, targetPlayerId, character });\n    return true;\n  }\n\n  // Добавление слушателя события\n  on(event, callback) {\n    if (!this.socket) {\n      this.init();\n    }\n\n    // Сохраняем ссылку на обработчик, чтобы можно было удалить его позже\n    if (!this.listeners.has(event)) {\n      this.listeners.set(event, []);\n    }\n    this.listeners.get(event).push(callback);\n\n    this.socket.on(event, callback);\n  }\n\n  // Удаление слушателя события\n  off(event, callback) {\n    if (!this.socket) {\n      return;\n    }\n\n    if (callback) {\n      this.socket.off(event, callback);\n      \n      // Удаляем конкретный обработчик из списка\n      const callbacks = this.listeners.get(event) || [];\n      const index = callbacks.indexOf(callback);\n      if (index !== -1) {\n        callbacks.splice(index, 1);\n      }\n    } else {\n      // Удаляем все обработчики для события\n      const callbacks = this.listeners.get(event) || [];\n      callbacks.forEach(cb => {\n        this.socket.off(event, cb);\n      });\n      this.listeners.delete(event);\n    }\n  }\n\n  // Удаление всех слушателей\n  removeAllListeners() {\n    if (!this.socket) {\n      return;\n    }\n\n    this.listeners.forEach((callbacks, event) => {\n      callbacks.forEach(callback => {\n        this.socket.off(event, callback);\n      });\n    });\n\n    this.listeners.clear();\n  }\n\n  // Проверка соединения\n  isConnected() {\n    return this.connected;\n  }\n\n  // Получить ID сокета (ID игрока)\n  getSocketId() {\n    return this.socket?.id;\n  }\n\n  // Отключение\n  disconnect() {\n    if (!this.socket) {\n      return;\n    }\n\n    mediasoupApi.stopAllConnections();\n    mediasoupApi.stopLocalStream();\n    this.socket.disconnect();\n    this.socket = null;\n    this.connected = false;\n    this.socketId = null;\n    this.listeners.clear();\n  }\n\n  // Выход из комнаты\n  leaveRoom(roomCode) {\n    if (!this.connected || !this.socket) {\n      return;\n    }\n\n    this.socket.emit('leave-room', { roomCode });\n  }\n\n  // Получение списка игроков в комнате\n  getPlayers(roomCode) {\n    if (!this.connected || !this.socket) {\n      console.warn('Попытка получить список игроков, но соединение не установлено');\n      return false;\n    }\n    \n    this.socket.emit('get-players', { roomCode });\n    return true;\n  }\n\n  // Добавляем базовую функцию для отправки сообщений на сервер\n  emit(eventName, data) {\n    if (!this.connected || !this.socket) {\n      console.warn(`Попытка отправить событие ${eventName}, но соединение не установлено`);\n      return false;\n    }\n    \n    this.socket.emit(eventName, data);\n    return true;\n  }\n\n  // Метод для вызова обработчиков событий\n  trigger(event, data) {\n    if (!this.listeners.has(event)) return;\n    \n    const callbacks = this.listeners.get(event) || [];\n    callbacks.forEach(callback => {\n      try {\n        callback(data);\n      } catch (error) {\n        console.error(`Ошибка в обработчике события ${event}:`, error);\n      }\n    });\n  }\n\n  // Методы для WebRTC\n  async initiateWebRTCConnection(targetId) {\n    try {\n      const offer = await mediasoupApi.createOffer(targetId);\n      this.socket.emit('webrtc-offer', { offer, to: targetId });\n    } catch (error) {\n      console.error('Ошибка инициализации WebRTC соединения:', error);\n    }\n  }\n\n  // Обработка подключения нового игрока\n  onPlayerJoined(callback) {\n    this.socket.on('player-joined', async (data) => {\n      console.log('Новый игрок присоединился:', data);\n      try {\n        // Инициируем WebRTC соединение с новым игроком\n        await this.initiateWebRTCConnection(data.playerId);\n        console.log('WebRTC соединение инициировано с:', data.playerId);\n        callback(data);\n      } catch (error) {\n        console.error('Ошибка инициализации WebRTC соединения:', error);\n      }\n    });\n  }\n\n  // Обработка отключения игрока\n  onPlayerLeft(callback) {\n    this.socket.on('player-left', (data) => {\n      console.log('Игрок покинул комнату:', data);\n      // Закрываем WebRTC соединение\n      mediasoupApi.closeConnection(data.playerId);\n      console.log('WebRTC соединение закрыто с:', data.playerId);\n      callback(data);\n    });\n  }\n\n  // Отправка WebRTC предложения\n  sendWebRTCOffer(peerId, offer) {\n    if (!this.socket || !this.connected) {\n      console.error('Сокет не подключен');\n      return;\n    }\n    console.log('Отправка предложения WebRTC к:', peerId);\n    this.socket.emit('webrtc-offer', {\n      to: peerId,\n      offer\n    });\n  }\n\n  // Отправка WebRTC ответа\n  sendWebRTCAnswer(peerId, answer) {\n    if (!this.socket || !this.connected) {\n      console.error('Сокет не подключен');\n      return;\n    }\n    console.log('Отправка ответа WebRTC к:', peerId);\n    this.socket.emit('webrtc-answer', {\n      to: peerId,\n      answer\n    });\n  }\n\n  // Отправка WebRTC ICE кандидата\n  sendWebRTCIceCandidate(peerId, candidate) {\n    if (!this.socket || !this.connected) {\n      console.error('Сокет не подключен');\n      return;\n    }\n    console.log('Отправка ICE кандидата к:', peerId);\n    this.socket.emit('webrtc-ice-candidate', {\n      to: peerId,\n      candidate\n    });\n  }\n\n  // Получение WebRTC предложения\n  onWebRTCOffer(callback) {\n    this.socket.on('webrtc-offer', async ({ from, offer }) => {\n      try {\n        const peerConnection = await mediasoupApi.createPeerConnection(from);\n        await peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\n        const answer = await peerConnection.createAnswer();\n        await peerConnection.setLocalDescription(answer);\n        this.sendWebRTCAnswer(from, answer);\n      } catch (error) {\n        console.error('Ошибка при обработке WebRTC предложения:', error);\n      }\n    });\n  }\n\n  // Получение WebRTC ответа\n  onWebRTCAnswer(callback) {\n    this.socket.on('webrtc-answer', async ({ from, answer }) => {\n      try {\n        const peerConnection = mediasoupApi.getPeerConnection(from);\n        if (peerConnection) {\n          await peerConnection.setRemoteDescription(new RTCSessionDescription(answer));\n        }\n      } catch (error) {\n        console.error('Ошибка при обработке WebRTC ответа:', error);\n      }\n    });\n  }\n\n  // Получение WebRTC ICE кандидата\n  onWebRTCIceCandidate(callback) {\n    this.socket.on('webrtc-ice-candidate', async ({ from, candidate }) => {\n      try {\n        const peerConnection = mediasoupApi.getPeerConnection(from);\n        if (peerConnection) {\n          await peerConnection.addIceCandidate(new RTCIceCandidate(candidate));\n        }\n      } catch (error) {\n        console.error('Ошибка при обработке WebRTC ICE кандидата:', error);\n      }\n    });\n  }\n\n  // Отключение WebRTC обработчиков\n  offWebRTCOffer(callback) {\n    if (!this.socket) return;\n    this.socket.off('webrtc-offer', callback);\n  }\n\n  offWebRTCAnswer(callback) {\n    if (!this.socket) return;\n    this.socket.off('webrtc-answer', callback);\n  }\n\n  offWebRTCIceCandidate(callback) {\n    if (!this.socket) return;\n    this.socket.off('webrtc-ice-candidate', callback);\n  }\n\n  offPlayerJoined(callback) {\n    if (!this.socket) return;\n    this.socket.off('player-joined', callback);\n  }\n\n  // Получение текущего состояния сокета\n  getSocketState() {\n    if (!this.socket) {\n      return {\n        connected: false,\n        connectionState: 'closed',\n        id: null,\n        transportType: null\n      };\n    }\n    \n    return {\n      connected: this.socket.connected,\n      connectionState: this.socket.connected ? 'connected' : (this.socket.disconnected ? 'disconnected' : 'connecting'),\n      id: this.socket.id,\n      transportType: this.socket.io?.engine?.transport?.name || null\n    };\n  }\n  \n  // Преобразование объекта с состоянием сокета в строку для вывода в консоль\n  getSocketStateString() {\n    const state = this.getSocketState();\n    return `Сокет: ${state.connectionState} (ID: ${state.id || 'нет'}, транспорт: ${state.transportType || 'неизвестно'})`;\n  }\n  \n  // Логирование состояния сокета в консоль\n  logSocketState() {\n    console.log(this.getSocketStateString());\n    return this.getSocketState();\n  }\n}\n\n// Экспортируем синглтон\nexport default new SocketApi(); ","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from './HomePage.module.css';\r\nimport socketApi from '@/shared/api/socketApi';\r\n\r\nexport const HomePage = () => {\r\n  const [name, setName] = useState('');\r\n  const [roomCode, setRoomCode] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Инициализация сокета при первой загрузке страницы\r\n  useEffect(() => {\r\n    // Инициализируем соединение\r\n    const socket = socketApi.init();\r\n    \r\n    // Проверяем соединение\r\n    const checkConnection = () => {\r\n      const connected = socketApi.isConnected();\r\n      setIsConnected(connected);\r\n      if (!connected) {\r\n        console.log('Переподключение к серверу...');\r\n        setError('Ожидание подключения к серверу. Убедитесь, что сервер запущен.');\r\n      } else {\r\n        setError('');\r\n      }\r\n    };\r\n    \r\n    // Проверяем соединение сразу\r\n    checkConnection();\r\n    \r\n    // И периодически проверяем соединение\r\n    const connectionTimer = setInterval(checkConnection, 3000);\r\n\r\n    // Слушаем событие создания комнаты\r\n    socketApi.on('room-created', (data) => {\r\n      setIsLoading(false);\r\n      console.log('Комната создана:', data);\r\n      \r\n      if (data.success) {\r\n        // После успешного создания комнаты перенаправляем на страницу игры\r\n        navigate(`/game?name=${encodeURIComponent(name)}&room=${encodeURIComponent(data.roomCode)}&host=true`);\r\n      } else {\r\n        // Показываем ошибку при неудачном создании\r\n        setError(data.error || 'Не удалось создать комнату');\r\n      }\r\n    });\r\n\r\n    // Слушаем событие присоединения к комнате\r\n    socketApi.on('room-joined', (data) => {\r\n      setIsLoading(false);\r\n      console.log('Присоединение к комнате:', data);\r\n      \r\n      if (data.success) {\r\n        // После успешного присоединения перенаправляем на страницу игры\r\n        navigate(`/game?name=${encodeURIComponent(name)}&room=${encodeURIComponent(roomCode)}`);\r\n      } else {\r\n        // Показываем ошибку\r\n        setError(data.error || 'Не удалось присоединиться к комнате');\r\n      }\r\n    });\r\n\r\n    // Слушаем ошибки соединения\r\n    socketApi.on('connect_error', (err) => {\r\n      console.error('Ошибка соединения Socket.IO:', err);\r\n      setError(`Ошибка соединения с сервером: ${err.message}`);\r\n      setIsLoading(false);\r\n    });\r\n\r\n    // Очистка при размонтировании\r\n    return () => {\r\n      clearInterval(connectionTimer);\r\n      socketApi.off('room-created');\r\n      socketApi.off('room-joined');\r\n      socketApi.off('connect_error');\r\n    };\r\n  }, [navigate, name, roomCode]);\r\n\r\n  const handleCreateRoom = () => {\r\n    if (!isConnected) {\r\n      setError('Нет соединения с сервером. Пожалуйста, подождите или перезагрузите страницу.');\r\n      return;\r\n    }\r\n\r\n    if (!name.trim()) {\r\n      setError('Введите ваше имя');\r\n      return;\r\n    }\r\n\r\n    setError('');\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      console.log('Отправка запроса на создание комнаты:', name);\r\n      // Отправляем запрос на создание комнаты\r\n      socketApi.createRoom(name);\r\n    } catch (err) {\r\n      console.error('Ошибка при создании комнаты:', err);\r\n      setError(`Ошибка соединения с сервером: ${err.message}`);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleJoinRoom = () => {\r\n    if (!isConnected) {\r\n      setError('Нет соединения с сервером. Пожалуйста, подождите или перезагрузите страницу.');\r\n      return;\r\n    }\r\n\r\n    if (!name.trim()) {\r\n      setError('Введите ваше имя');\r\n      return;\r\n    }\r\n\r\n    if (!roomCode.trim()) {\r\n      setError('Введите код комнаты');\r\n      return;\r\n    }\r\n\r\n    setError('');\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      console.log('Отправка запроса на присоединение к комнате:', roomCode, name);\r\n      // Отправляем запрос на присоединение к комнате\r\n      socketApi.joinRoom(roomCode, name);\r\n    } catch (err) {\r\n      console.error('Ошибка при присоединении к комнате:', err);\r\n      setError(`Ошибка соединения с сервером: ${err.message}`);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.homePage}>\r\n      <div className={styles.container}>\r\n        <h1 className={styles.title}>Who Am I?</h1>\r\n        <p className={styles.subtitle}>A fun game to play with your friends</p>\r\n        \r\n        {!isConnected && (\r\n          <div className={styles.connectionStatus}>\r\n            Connecting to server...\r\n          </div>\r\n        )}\r\n        \r\n        {error && <div className={styles.errorMessage}>{error}</div>}\r\n        \r\n        <div className={`${styles.formGroup} ${styles.nameInput}`}>\r\n          <input\r\n            type=\"text\"\r\n            className={styles.input}\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            disabled={isLoading || !isConnected}\r\n          />\r\n        </div>\r\n        \r\n        <div className={styles.formGroup}>\r\n          <button \r\n            className={styles.createButton}\r\n            onClick={handleCreateRoom}\r\n            disabled={isLoading || !isConnected}\r\n          >\r\n            {isLoading ? 'Creating...' : 'Create room'}\r\n          </button>\r\n        </div>\r\n        \r\n        <div className={styles.divider}>or</div>\r\n        \r\n        <div className={styles.formGroup}>\r\n          <input\r\n            type=\"text\"\r\n            className={styles.input}\r\n            placeholder=\"Room code\"\r\n            value={roomCode}\r\n            onChange={(e) => setRoomCode(e.target.value.toUpperCase())}\r\n            disabled={isLoading || !isConnected}\r\n          />\r\n        </div>\r\n        \r\n        <div className={styles.formGroup}>\r\n          <button \r\n            className={styles.joinButton}\r\n            onClick={handleJoinRoom}\r\n            disabled={isLoading || !isConnected}\r\n          >\r\n            {isLoading ? 'Joining...' : 'Join'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// Проверка, определены ли уже глобальные объекты\nif (typeof global === 'undefined') {\n  window.global = window;\n}\n\nif (typeof process === 'undefined' || !process.browser) {\n  window.process = window.process || {};\n  window.process.browser = true;\n  window.process.env = window.process.env || {};\n}\n\nif (typeof Buffer === 'undefined') {\n  window.Buffer = window.Buffer || {\n    from: (arr) => new Uint8Array(arr),\n    alloc: (size) => new Uint8Array(size),\n    allocUnsafe: (size) => new Uint8Array(size),\n    isBuffer: () => false\n  };\n}\n\nimport socketApi from './socketApi';\nimport Peer from 'simple-peer';\n\n// Реализация VideoApi с использованием WebRTC и simple-peer\nclass VideoApi {\n  constructor() {\n    this.peers = {};\n    this.connectedPlayers = new Set();\n    this.localStream = null;\n    this.onRemoteStream = null;\n    this.onRemoteStreamRemoved = null;\n    this.myPlayerId = null;\n    this.roomId = null;\n    this.initialized = false;\n    this.animationFrames = [];\n    this.canvasStreams = {};\n  }\n\n  // Создание WebRTC пира\n  createPeer(playerId, initiator, initialSignal = null) {\n    console.log(`Создание WebRTC соединения с ${playerId} (инициатор: ${initiator})`);\n    \n    if (this.peers[playerId]) {\n      console.log(`Соединение с ${playerId} уже существует`);\n      return;\n    }\n\n    const options = {\n      initiator,\n      trickle: false,\n      stream: this.localStream,\n      config: {\n        iceServers: [\n          { urls: 'stun:stun1.l.google.com:19302' },\n          { urls: 'stun:stun2.l.google.com:19302' },\n          { urls: 'stun:stun3.l.google.com:19302' },\n          { urls: 'stun:stun4.l.google.com:19302' },\n          { urls: 'stun:stun5.l.google.com:19302' },\n          { urls: 'stun:stun6.l.google.com:19302' },\n          { urls: 'stun:stun7.l.google.com:19302' },\n          { urls: 'stun:stun8.l.google.com:19302' },\n          { urls: 'stun:stun9.l.google.com:19302' },\n          { urls: 'stun:stun10.l.google.com:19302' },\n          { urls: 'stun:stun11.l.google.com:19302' },\n          { urls: 'stun:stun12.l.google.com:19302' },\n          { urls: 'stun:stun13.l.google.com:19302' },\n          { urls: 'stun:stun14.l.google.com:19302' },\n          { urls: 'stun:stun15.l.google.com:19302' },\n          { urls: 'stun:stun16.l.google.com:19302' },\n          { urls: 'stun:stun17.l.google.com:19302' },\n          { urls: 'stun:stun18.l.google.com:19302' },\n          { urls: 'stun:stun19.l.google.com:19302' },\n          { urls: 'stun:stun20.l.google.com:19302' }\n        ],\n        iceTransportPolicy: 'all',\n        iceCandidatePoolSize: 10\n      }\n    };\n    \n    try {\n      const peer = new Peer(options);\n      \n      peer.on('error', (err) => {\n        console.error(`Ошибка в соединении с ${playerId}:`, err);\n        this.handlePeerError(playerId, err);\n      });\n\n      peer.on('connect', () => {\n        console.log(`Соединение установлено с ${playerId}`);\n        this.connectedPlayers.add(playerId);\n        \n        // Проверяем состояние потока после установки соединения\n        if (this.localStream) {\n          const videoTrack = this.localStream.getVideoTracks()[0];\n          if (videoTrack) {\n            console.log(`Состояние видеотрека для ${playerId}:`, {\n              enabled: videoTrack.enabled,\n              readyState: videoTrack.readyState,\n              muted: videoTrack.muted\n            });\n          }\n        }\n      });\n\n      peer.on('close', () => {\n        console.log(`Соединение закрыто с ${playerId}`);\n        this.handlePeerClose(playerId);\n      });\n\n      peer.on('stream', (stream) => {\n        console.log(`Получен поток от ${playerId}`);\n        if (this.onRemoteStream) {\n          stream.playerId = playerId;\n          \n          // Проверяем состояние полученного потока\n          const videoTrack = stream.getVideoTracks()[0];\n          if (videoTrack) {\n            console.log(`Состояние полученного видеотрека от ${playerId}:`, {\n              enabled: videoTrack.enabled,\n              readyState: videoTrack.readyState,\n              muted: videoTrack.muted\n            });\n          }\n          \n          this.onRemoteStream(playerId, stream);\n        }\n      });\n\n      peer.on('signal', (signal) => {\n        console.log(`Отправка сигнала к ${playerId}`);\n        socketApi.emit('signal', { to: playerId, signal });\n      });\n\n      if (!initiator && initialSignal) {\n        peer.signal(initialSignal);\n      }\n\n      this.peers[playerId] = peer;\n      return peer;\n    } catch (error) {\n      console.error(`Ошибка при создании пира для ${playerId}:`, error);\n      this.handlePeerError(playerId, error);\n    }\n  }\n\n  // Обработка ошибок пира\n  handlePeerError(playerId, error) {\n    if (this.peers[playerId]) {\n      this.peers[playerId].destroy();\n      delete this.peers[playerId];\n    }\n    this.connectedPlayers.delete(playerId);\n    \n    if (this.onRemoteStreamRemoved) {\n      this.onRemoteStreamRemoved(playerId);\n    }\n  }\n\n  // Обработка закрытия пира\n  handlePeerClose(playerId) {\n    delete this.peers[playerId];\n    this.connectedPlayers.delete(playerId);\n    \n    if (this.onRemoteStreamRemoved) {\n      this.onRemoteStreamRemoved(playerId);\n    }\n  }\n\n  // Создание потока из канваса\n  async createCanvasStream() {\n    const canvas = document.createElement('canvas');\n    canvas.width = 640;\n    canvas.height = 480;\n    const ctx = canvas.getContext('2d');\n    \n    let hue = 0;\n    const text = 'Нет камеры';\n    \n    // Настройка анимации\n    const animate = () => {\n      // Очистка канваса\n      ctx.fillStyle = '#1a1625';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      \n      // Рисуем пульсирующую рамку\n      const borderWidth = 4;\n      ctx.strokeStyle = `hsl(${hue}, 70%, 60%)`;\n      ctx.lineWidth = borderWidth;\n      ctx.strokeRect(borderWidth/2, borderWidth/2, \n                    canvas.width - borderWidth, \n                    canvas.height - borderWidth);\n      \n      // Обновляем цвет\n      hue = (hue + 1) % 360;\n      \n      // Рисуем текст\n      ctx.font = '48px Arial';\n      ctx.fillStyle = '#ffffff';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(text, canvas.width/2, canvas.height/2);\n      \n      // Рисуем иконку камеры\n      ctx.font = '36px Arial';\n      ctx.fillText('🎥', canvas.width/2, canvas.height/2 - 60);\n      \n      const animFrameId = requestAnimationFrame(animate);\n      this.animationFrames.push(animFrameId);\n    };\n    \n    animate();\n    \n    const stream = canvas.captureStream(30);\n    stream.isCanvasStream = true;\n    return stream;\n  }\n\n  // Настройка слушателей сокетов и WebRTC соединений\n  setupSocketListeners(roomId) {\n    // Отписываемся от предыдущих слушателей\n    socketApi.off('signal');\n    socketApi.off('player-joined');\n    socketApi.off('player-left');\n    socketApi.off('all-players');\n    \n    // Отправляем запрос на присоединение к комнате\n    socketApi.emit('join-room', { roomId });\n    \n    // Получаем список всех игроков в комнате и создаем соединения\n    socketApi.on('all-players', (players) => {\n      console.log('Получен список игроков в комнате:', players);\n      players.forEach(playerId => {\n        if (playerId !== this.myPlayerId && !this.connectedPlayers.has(playerId)) {\n          console.log(`Создаем соединение с игроком ${playerId}`);\n          this.createPeer(playerId, true);\n        }\n      });\n    });\n    \n    // Обработка нового игрока\n    socketApi.on('player-joined', (playerId) => {\n      console.log('Новый игрок присоединился:', playerId);\n      if (playerId !== this.myPlayerId && !this.connectedPlayers.has(playerId)) {\n        console.log(`Создаем соединение с новым игроком ${playerId}`);\n        this.createPeer(playerId, false);\n      }\n    });\n    \n    // Обработка выхода игрока\n    socketApi.on('player-left', (playerId) => {\n      console.log('Игрок вышел:', playerId);\n      this.connectedPlayers.delete(playerId);\n      \n      // Закрываем соединение\n      if (this.peers[playerId]) {\n        this.peers[playerId].destroy();\n        delete this.peers[playerId];\n      }\n      \n      // Уведомляем об удалении потока\n      if (this.onRemoteStreamRemoved) {\n        this.onRemoteStreamRemoved(playerId);\n      }\n    });\n    \n    // Обработка WebRTC сигналов\n    socketApi.on('signal', ({ from, signal }) => {\n      console.log('Получен сигнал от:', from);\n      \n      // Если у нас уже есть соединение с этим игроком\n      if (this.peers[from]) {\n        if (this.peers[from].connected) {\n          try {\n            console.log(`Обработка сигнала для существующего соединения с ${from}`);\n            this.peers[from].signal(signal);\n          } catch (err) {\n            console.error('Ошибка при обработке сигнала:', err);\n            // Пересоздаем пир при ошибке\n            this.handlePeerError(from, err);\n            this.createPeer(from, false, signal);\n          }\n        } else {\n          console.warn('Соединение с', from, 'не установлено или закрыто. Создаём новое соединение.');\n          this.createPeer(from, false, signal);\n        }\n      } else {\n        console.warn('Соединение с', from, 'не найдено. Создаём новое соединение.');\n        this.createPeer(from, false, signal);\n      }\n    });\n  }\n  \n  // Отключение видео\n  toggleVideo(enabled) {\n    if (this.localStream) {\n      const videoTracks = this.localStream.getVideoTracks();\n      if (videoTracks.length > 0) {\n        videoTracks.forEach(track => {\n          track.enabled = enabled;\n        });\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Отключение звука\n  toggleAudio(enabled) {\n    if (this.localStream) {\n      const audioTracks = this.localStream.getAudioTracks();\n      if (audioTracks.length > 0) {\n        audioTracks.forEach(track => {\n          track.enabled = enabled;\n        });\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Проверка статуса камеры\n  isVideoEnabled() {\n    return this.localStream && this.localStream.getVideoTracks().length > 0;\n  }\n\n  // Проверка статуса микрофона\n  isAudioEnabled() {\n    return this.localStream && this.localStream.getAudioTracks().length > 0;\n  }\n\n  // Остановка всех соединений\n  stop() {\n    // Останавливаем локальный поток\n    if (this.localStream) {\n      this.localStream.getTracks().forEach(track => track.stop());\n      this.localStream = null;\n    }\n    \n    // Закрываем все WebRTC соединения\n    Object.values(this.peers).forEach(peer => {\n      if (peer && typeof peer.destroy === 'function') {\n        peer.destroy();\n      }\n    });\n    this.peers = {};\n    \n    // Очищаем все подписки\n    socketApi.off('signal');\n    socketApi.off('player-joined');\n    socketApi.off('player-left');\n    socketApi.off('all-players');\n    \n    // Остановка всех анимаций\n    this.animationFrames.forEach(id => {\n      cancelAnimationFrame(id);\n    });\n    this.animationFrames = [];\n    \n    // Удаление canvas элементов\n    const canvasElements = document.querySelectorAll('canvas[id^=\"canvas-\"]');\n    canvasElements.forEach(canvas => {\n      canvas.remove();\n    });\n    \n    // Очищаем сохраненные потоки\n    this.canvasStreams = {};\n    \n    // Сбрасываем состояние\n    this.initialized = false;\n    this.connectedPlayers.clear();\n    this.roomId = null;\n  }\n  \n  // Получение информации о потоке\n  getStreamInfo(stream) {\n    if (!stream) return null;\n    \n    return {\n      isCanvas: stream.isCanvasStream || false,\n      canvasId: stream.canvasId || null,\n      videoTracks: stream.getVideoTracks().length,\n      audioTracks: stream.getAudioTracks().length\n    };\n  }\n\n  // Инициализация API\n  async init(roomId) {\n    console.log('Инициализация Video API с WebRTC для комнаты:', roomId);\n    this.roomId = roomId;\n    \n    // Сначала освобождаем предыдущие ресурсы\n    if (this.localStream) {\n      this.localStream.getTracks().forEach(track => track.stop());\n      this.localStream = null;\n    }\n    \n    let retryCount = 0;\n    const maxRetries = 3;\n    \n    while (retryCount < maxRetries) {\n      try {\n        console.log(`Попытка ${retryCount + 1}/${maxRetries} получить видеопоток с камеры...`);\n        \n        // Запрашиваем только видео, если аудио не нужен\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: {\n            width: { ideal: 640 },\n            height: { ideal: 480 },\n            frameRate: { ideal: 30 }\n          },\n          audio: false // Отключаем аудио, так как оно не используется\n        });\n        \n        console.log('Медиапоток получен успешно: видео треков:', stream.getVideoTracks().length, \n                    ', аудио треков:', stream.getAudioTracks().length);\n        \n        const videoTrack = stream.getVideoTracks()[0];\n        console.log('Параметры видеотрека:', videoTrack.getSettings());\n        \n        this.localStream = stream;\n        break;\n      } catch (error) {\n        console.error(`Попытка ${retryCount + 1}/${maxRetries} не удалась:`, error);\n        \n        if (error.name === 'NotReadableError' && retryCount < maxRetries - 1) {\n          console.log('Устройство занято, ждем 2 секунды перед следующей попыткой...');\n          await new Promise(resolve => setTimeout(resolve, 2000));\n          retryCount++;\n          continue;\n        }\n        \n        console.error('Не удалось получить видеопоток с камеры:', error);\n        console.log('Создаем поток из канваса вместо камеры');\n        this.localStream = await this.createCanvasStream();\n        break;\n      }\n    }\n\n    this.initialized = true;\n    return this.localStream;\n  }\n}\n\nconst videoApi = new VideoApi();\nexport default videoApi; ","import React, { useEffect, useRef, useState } from 'react';\nimport styles from './GamePage.module.css';\nimport videoApi from '../../shared/api/videoApi';\n\nconst PlayerVideo = ({ \n  stream, \n  playerId, \n  playerName, \n  character, \n  isCurrentPlayer, \n  isVideoEnabled = true, \n  isAudioEnabled = true, \n  muted \n}) => {\n  const videoRef = useRef(null);\n  const [hasVideo, setHasVideo] = useState(false);\n  const [videoError, setVideoError] = useState(null);\n  const [videoStatus, setVideoStatus] = useState('connecting'); // 'connecting', 'active', 'error'\n\n  useEffect(() => {\n    console.log('PlayerVideo: Обновление потока для', playerId, stream ? `Видеотреков: ${stream.getVideoTracks().length}, Аудиотреков: ${stream.getAudioTracks().length}` : 'нет потока');\n    \n    if (!stream || !videoRef.current) {\n      console.log('Нет потока для игрока', playerId, 'или ссылки на видеоэлемент');\n      return;\n    }\n\n    const videoElement = videoRef.current;\n    const videoTrack = stream.getVideoTracks()[0];\n    \n    if (videoTrack) {\n      console.log('Видеотрек для', playerId, ':', {\n        enabled: videoTrack.enabled,\n        active: videoTrack.active,\n        type: videoTrack.kind,\n        readyState: videoTrack.readyState,\n        muted: videoTrack.muted\n      });\n    }\n\n    // Очищаем предыдущий источник видео\n    if (videoElement.srcObject) {\n      console.log('Очищаем предыдущий источник видео для', playerId);\n      videoElement.srcObject = null;\n    }\n\n    // Устанавливаем новый поток\n    videoElement.srcObject = stream;\n    \n    // Настраиваем обработчики событий\n    const handlePlay = () => {\n      console.log('Видео успешно запущено для', playerId);\n    };\n\n    const handleError = (error) => {\n      console.error('Ошибка воспроизведения видео:', error);\n      // Пробуем перезапустить воспроизведение\n      setTimeout(() => {\n        if (videoElement.paused) {\n          console.log('Пробуем перезапустить воспроизведение для', playerId);\n          videoElement.play().catch(err => {\n            console.error('Ошибка при перезапуске воспроизведения:', err);\n          });\n        }\n      }, 1000);\n    };\n\n    const handleLoadedMetadata = () => {\n      console.log('Метаданные видео загружены для', playerId);\n      // Пробуем запустить воспроизведение\n      videoElement.play().catch(err => {\n        console.error('Ошибка при запуске воспроизведения:', err);\n      });\n    };\n\n    videoElement.addEventListener('play', handlePlay);\n    videoElement.addEventListener('error', handleError);\n    videoElement.addEventListener('loadedmetadata', handleLoadedMetadata);\n\n    // Очистка при размонтировании\n    return () => {\n      console.log('Очистка компонента PlayerVideo для', playerId);\n      videoElement.removeEventListener('play', handlePlay);\n      videoElement.removeEventListener('error', handleError);\n      videoElement.removeEventListener('loadedmetadata', handleLoadedMetadata);\n      \n      if (videoElement.srcObject) {\n        videoElement.srcObject.getTracks().forEach(track => track.stop());\n        videoElement.srcObject = null;\n      }\n    };\n  }, [stream, playerId]);\n\n  // Обработчик ошибок воспроизведения видео\n  const handleVideoError = (error) => {\n    console.error(`Ошибка воспроизведения видео для ${playerId}:`, error);\n    setVideoError(error.message || 'Ошибка воспроизведения видео');\n    setHasVideo(false);\n    setVideoStatus('error');\n  };\n\n  // Обработчик успешной загрузки видео\n  const handleVideoPlay = () => {\n    console.log(`Видео успешно запущено для ${playerId}`);\n    setVideoStatus('active');\n    setHasVideo(true);\n  };\n\n  // Определяем, показывать ли видео\n  const showVideo = stream && \n    (hasVideo || stream.getVideoTracks().length > 0 || stream.isCanvasStream);\n\n  return (\n    <div className={styles.playerVideoContainer}>\n      {stream ? (\n        <div className={styles.videoWrapper}>\n          <video\n            ref={videoRef}\n            className={styles.playerVideo}\n            autoPlay\n            playsInline\n            muted={muted}\n            onError={handleVideoError}\n            onPlay={handleVideoPlay}\n          />\n          <div className={`${styles.videoStatus} ${styles[`videoStatus${videoStatus.charAt(0).toUpperCase() + videoStatus.slice(1)}`]}`}>\n            <span className={styles.streamIcon}>\n              {videoStatus === 'connecting' && '⌛'}\n              {videoStatus === 'active' && '✓'}\n              {videoStatus === 'error' && '✗'}\n            </span>\n          </div>\n        </div>\n      ) : (\n        <div className={styles.placeholderVideo}>\n          <div className={styles.placeholderContent}>\n            <span role=\"img\" aria-label=\"user\">👤</span>\n            <div className={styles.noVideoText}>\n              {videoError ? 'Ошибка видео' : 'Подключение...'}\n            </div>\n            <div className={styles.spinnerContainer}>\n              <div className={styles.spinner}></div>\n            </div>\n          </div>\n        </div>\n      )}\n      {!isVideoEnabled && stream && (\n        <div className={styles.videoDisabled}>\n          <span className={styles.noVideoIcon}>🎥</span>\n        </div>\n      )}\n      <div className={styles.playerInfo}>\n        <div className={styles.playerName}>\n          {playerName || `Игрок ${playerId?.substring(0, 4) || 'неизвестный'}`} {isCurrentPlayer && ' (Вы)'}\n        </div>\n        {character && (\n          <div className={styles.playerCharacter}>\n            Персонаж: {isCurrentPlayer ? '???' : character}\n          </div>\n        )}\n        {!isAudioEnabled && (\n          <div className={styles.mediaControls}>\n            <span className={styles.mutedIcon}>🔇</span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerVideo; ","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport styles from './GamePage.module.css';\nimport socketApi from '@/shared/api/socketApi';\nimport videoApi from '@/shared/api/videoApi';\nimport PlayerVideo from './PlayerVideo';\n\nexport const GamePage = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  const [serverStatus, setServerStatus] = useState('connecting'); // 'connecting', 'connected', 'error'\n  const [notes, setNotes] = useState('');\n  const [editingCharacter, setEditingCharacter] = useState(null);\n  const [newCharacter, setNewCharacter] = useState('');\n  const [videoEnabled, setVideoEnabled] = useState(true);\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const localVideoRef = useRef(null);\n  const [remoteStreams, setRemoteStreams] = useState({});\n\n  const [gameState, setGameState] = useState({\n    roomCode: '',\n    players: [],\n    isHost: false,\n    playerName: '',\n    gameStarted: false,\n    playerId: '',\n    // Карта кто кому загадывает слова (playerId -> assignedToPlayerId)\n    characterAssignments: {},\n    // Персонажи, присвоенные игрокам\n    characters: {}\n  });\n\n  // Подсказки для наводящих вопросов\n  const hintQuestions = [\n    \"Я человек?\",\n    \"Я вымышленный персонаж?\",\n    \"Я живу в наше время?\",\n    \"Я известная личность?\",\n    \"Я спортсмен?\",\n    \"Я актер/актриса?\",\n    \"Я музыкант?\",\n    \"Я политик?\",\n    \"Я старше 50 лет?\",\n    \"Я мужчина?\",\n    \"Я женщина?\"\n  ];\n\n  // Вспомогательная функция для формирования понятного сообщения об ошибке\n  const getMediaErrorMessage = (error) => {\n    if (!error) {\n      return 'Неизвестная ошибка при доступе к камере';\n    }\n    \n    switch(error.name) {\n      case 'NotAllowedError':\n        return 'Доступ к камере запрещен. Пожалуйста, разрешите доступ к камере в настройках браузера и перезагрузите страницу.';\n      case 'NotFoundError':\n        return 'Камера не найдена. Проверьте, что камера подключена и работает.';\n      case 'NotReadableError':\n        return 'Камера уже используется другим приложением. Закройте другие приложения, использующие камеру, и перезагрузите страницу.';\n      case 'OverconstrainedError':\n        return 'Запрошенное разрешение камеры недоступно. Попробуйте с меньшими параметрами.';\n      case 'AbortError':\n        return 'Операция прервана. Попробуйте еще раз.';\n      case 'SecurityError':\n        return 'Использование камеры заблокировано настройками безопасности браузера.';\n      case 'TypeError':\n        return 'Неподдерживаемый тип параметров для доступа к камере.';\n      default:\n        return `Ошибка при доступе к камере: ${error.message || error.name}`;\n    }\n  };\n\n  // Получение параметров из URL\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const name = params.get('name');\n    const room = params.get('room');\n    const isHost = params.get('host') === 'true';\n\n    if (!name || !room) {\n      navigate('/');\n      return;\n    }\n\n    setGameState(prev => ({\n      ...prev,\n      playerName: name,\n      roomCode: room,\n      isHost: isHost\n    }));\n  }, [location.search, navigate]);\n\n  // Инициализация сокета и обработчиков событий\n  useEffect(() => {\n    if (!gameState.roomCode || !gameState.playerName) return;\n    \n    console.log('Инициализация соединения с комнатой:', gameState.roomCode);\n    setServerStatus('connecting');\n    \n    // Инициализируем соединение\n    const socket = socketApi.init();\n    \n    // Обработчики событий\n    const handleRoomUpdated = (data) => {\n      console.log('Получено обновление комнаты:', data);\n      \n      // Удаляем дубликаты игроков по ID\n      const uniquePlayers = data.players.filter(\n        (player, index, self) => index === self.findIndex(p => p.id === player.id)\n      );\n      \n      // Обновляем состояние игры\n      setGameState(prev => ({\n        ...prev,\n        players: uniquePlayers,\n        gameStarted: data.gameStarted || prev.gameStarted,\n        // Сохраняем другие данные из обновления\n        characterAssignments: data.characterAssignments || prev.characterAssignments,\n        characters: data.characters || prev.characters\n      }));\n    };\n    \n    const handleGameStarted = (data) => {\n      console.log('Игра началась:', data);\n      setGameState(prev => ({\n        ...prev,\n        gameStarted: true,\n        characterAssignments: data.characterAssignments\n      }));\n    };\n    \n    const handleCharacterAssigned = (data) => {\n      console.log('Получен персонаж:', data);\n      setGameState(prev => ({\n        ...prev,\n        characters: {\n          ...prev.characters,\n          [socketApi.getSocketId()]: data.character\n        }\n      }));\n    };\n    \n    const handleConnect = () => {\n      console.log('Соединение установлено');\n      setServerStatus('connected');\n      setError('');\n      \n      // Присоединяемся к комнате или создаем новую\n      if (gameState.isHost) {\n        socketApi.createRoom(gameState.playerName);\n      } else {\n        socketApi.joinRoom(gameState.roomCode, gameState.playerName);\n      }\n    };\n    \n    // Устанавливаем обработчики\n    socketApi.on('room-updated', handleRoomUpdated);\n    socketApi.on('game-started', handleGameStarted);\n    socketApi.on('character-assigned', handleCharacterAssigned);\n    socketApi.on('connect', handleConnect);\n    \n    // Если уже подключены, присоединяемся к комнате\n    if (socketApi.isConnected()) {\n      handleConnect();\n    }\n    \n    // Очистка при размонтировании\n    return () => {\n      socketApi.off('room-updated', handleRoomUpdated);\n      socketApi.off('game-started', handleGameStarted);\n      socketApi.off('character-assigned', handleCharacterAssigned);\n      socketApi.off('connect', handleConnect);\n    };\n  }, [gameState.roomCode, gameState.playerName, gameState.isHost]);\n\n  // Инициализация видео\n  useEffect(() => {\n    if (!gameState.roomCode || !gameState.playerName || serverStatus !== 'connected') return;\n    \n    console.log('Инициализация видео для комнаты:', gameState.roomCode);\n    \n    // Callback для обработки входящего потока\n    const handleRemoteStream = (playerId, stream) => {\n      console.log('Получен удаленный поток от:', playerId, \n        stream ? `Видеотреков: ${stream.getVideoTracks().length}, Аудиотреков: ${stream.getAudioTracks().length}` : 'Нет потока');\n      \n      if (stream) {\n        // Проверяем, есть ли в потоке треки или это canvas-поток\n        if (stream.getTracks().length > 0 || stream.isCanvasStream) {\n          setRemoteStreams(prev => ({\n            ...prev,\n            [playerId]: stream\n          }));\n        } else {\n          console.warn(`Поток от ${playerId} не содержит треков и не является canvas-потоком, игнорируем`);\n        }\n      }\n    };\n    \n    // Callback для удаления потока\n    const handleRemoteStreamRemoved = (playerId) => {\n      console.log('Удален удаленный поток от:', playerId);\n      setRemoteStreams(prev => {\n        const newStreams = { ...prev };\n        delete newStreams[playerId];\n        return newStreams;\n      });\n    };\n    \n    // Функция для устранения проблем с разрешениями доступа\n    const initVideoWithRetry = async (attempt = 1) => {\n      try {\n        console.log(`Попытка инициализации видео ${attempt}/3`);\n        const localStream = await videoApi.init(gameState.roomCode, handleRemoteStream, handleRemoteStreamRemoved);\n        \n        console.log('Локальный поток инициализирован:', \n          localStream ? `Видеотреков: ${localStream.getVideoTracks().length}, Аудиотреков: ${localStream.getAudioTracks().length}` : 'Нет потока');\n        \n        // Устанавливаем локальный поток в видео элемент\n        if (localVideoRef.current) {\n          localVideoRef.current.srcObject = localStream;\n        }\n        \n        // Сохраняем ID сокета для идентификации локального игрока\n        const socketId = socketApi.getSocketId();\n        if (socketId) {\n          setGameState(prev => ({\n            ...prev,\n            playerId: socketId\n          }));\n        }\n        \n        // Обновляем статус видео и аудио на основе реального состояния\n        setVideoEnabled(videoApi.isVideoEnabled());\n        setAudioEnabled(videoApi.isAudioEnabled());\n        \n        return true;\n      } catch (error) {\n        console.error(`Ошибка при инициализации видео (попытка ${attempt}/3):`, error);\n        \n        if (attempt < 3) {\n          console.log(`Повторная попытка через 1 секунду...`);\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          return initVideoWithRetry(attempt + 1);\n        }\n        \n        // Все попытки не удались\n        setError(getMediaErrorMessage(error));\n        setVideoEnabled(false);\n        setAudioEnabled(false);\n        \n        // Всё равно устанавливаем ID игрока\n        const socketId = socketApi.getSocketId();\n        if (socketId) {\n          setGameState(prev => ({\n            ...prev,\n            playerId: socketId\n          }));\n        }\n        \n        return false;\n      }\n    };\n    \n    // Запускаем инициализацию с возможностью повторной попытки\n    initVideoWithRetry();\n    \n    // Очистка при размонтировании\n    return () => {\n      videoApi.stop();\n    };\n  }, [gameState.roomCode, gameState.playerName, serverStatus]);\n\n  // Обработчик для начала игры\n  const handleStartGame = () => {\n    if (!gameState.isHost) return;\n    socketApi.startGame(gameState.roomCode);\n  };\n\n  // Обработчик для назначения персонажа\n  const handleAssignCharacter = (targetPlayerId) => {\n    if (!newCharacter.trim()) {\n      setError('Введите имя персонажа');\n    return;\n    }\n    \n    socketApi.emit('assign-character', {\n      roomCode: gameState.roomCode,\n      targetPlayerId,\n      character: newCharacter\n    });\n    \n    setNewCharacter('');\n    setEditingCharacter(null);\n  };\n\n  // Обработчики для включения/отключения видео и аудио\n  const toggleVideo = () => {\n    const newState = !videoEnabled;\n    videoApi.toggleVideo(newState);\n    setVideoEnabled(newState);\n  };\n\n  const toggleAudio = () => {\n    const newState = !audioEnabled;\n    videoApi.toggleAudio(newState);\n    setAudioEnabled(newState);\n  };\n\n  // Выход из игры\n  const handleLeaveGame = () => {\n    videoApi.stop();\n      navigate('/');\n  };\n\n  return (\n    <div className={styles.gamePage}>\n      {/* Верхняя панель с информацией об игре */}\n      <div className={styles.gameHeader}>\n        <div className={styles.roomInfo}>\n          <h2>Комната: {gameState.roomCode}</h2>\n          {serverStatus === 'connecting' && <div className={styles.connecting}>Подключение...</div>}\n          {serverStatus === 'error' && <div className={styles.error}>{error || 'Ошибка подключения'}</div>}\n        </div>\n          <div className={styles.gameControls}>\n          {gameState.isHost && !gameState.gameStarted && (\n            <button className={styles.startButton} onClick={handleStartGame}>\n              Начать игру\n            </button>\n          )}\n          <button className={styles.leaveButton} onClick={handleLeaveGame}>\n            Выйти\n          </button>\n        </div>\n      </div>\n\n      {/* Основной контент игры */}\n      <div className={styles.gameContent}>\n        {/* Сетка с видео игроков */}\n        <div className={styles.videoGrid}>\n          {/* Локальный игрок */}\n          <div className={`${styles.videoBox} ${styles.localVideo}`}>\n            <PlayerVideo\n              stream={localVideoRef.current?.srcObject || null}\n              playerId={gameState.playerId}\n              playerName={gameState.playerName}\n              character={gameState.characters[gameState.playerId]}\n              isCurrentPlayer={true}\n              isVideoEnabled={videoEnabled}\n              isAudioEnabled={audioEnabled}\n            />\n            <div className={styles.videoControls}>\n              <button \n                className={videoEnabled ? styles.videoOn : styles.videoOff} \n                onClick={toggleVideo}\n                title={videoEnabled ? \"Выключить камеру\" : \"Включить камеру\"}\n              >\n                {videoEnabled ? '🎥' : '🚫'}\n              </button>\n              <button \n                className={audioEnabled ? styles.audioOn : styles.audioOff} \n                onClick={toggleAudio}\n                title={audioEnabled ? \"Выключить микрофон\" : \"Включить микрофон\"}\n              >\n                {audioEnabled ? '🔊' : '🔇'}\n              </button>\n            </div>\n          </div>\n\n          {/* Удаленные игроки */}\n          {gameState.players\n            .filter(player => player.id !== gameState.playerId)\n            .filter((player, index, self) => \n              // Удаляем дубликаты по ID\n              index === self.findIndex(p => p.id === player.id)\n            )\n            .map((player) => (\n              <div key={`player-${player.id}`} className={styles.videoBox}>\n                  <PlayerVideo \n                  stream={remoteStreams[player.id]}\n                  playerId={player.id}\n                  playerName={player.name}\n                  character={gameState.characters[player.id]}\n                  isCurrentPlayer={false}\n                  isVideoEnabled={true}\n                  isAudioEnabled={true}\n                />\n                {gameState.gameStarted && gameState.characterAssignments[gameState.playerId] === player.id && (\n                  <div className={styles.assignCharacter}>\n                    {editingCharacter === player.id ? (\n                      <div className={styles.characterForm}>\n                        <input\n                          type=\"text\"\n                          value={newCharacter}\n                          onChange={(e) => setNewCharacter(e.target.value)}\n                          placeholder=\"Введите персонажа\"\n                        />\n                        <div className={styles.formButtons}>\n                          <button onClick={() => handleAssignCharacter(player.id)}>Назначить</button>\n                          <button onClick={() => setEditingCharacter(null)}>Отмена</button>\n                        </div>\n                      </div>\n                    ) : (\n                      <button \n                        onClick={() => setEditingCharacter(player.id)}\n                        className={styles.assignButton}\n                      >\n                        Назначить персонажа\n                      </button>\n                    )}\n                  </div>\n                )}\n              </div>\n            ))}\n                </div>\n                \n        {/* Боковая панель игры */}\n        <div className={styles.gameSidebar}>\n          {gameState.gameStarted ? (\n            <>\n              <div className={styles.gameInfo}>\n                <h3>Игра началась!</h3>\n                {gameState.characters[gameState.playerId] ? (\n                  <p>Ваш персонаж: <strong>???</strong></p>\n                ) : (\n                  <p>Ожидайте, пока вам загадают персонажа</p>\n                )}\n                  </div>\n                  \n              <div className={styles.hintQuestions}>\n                <h3>Подсказки для вопросов:</h3>\n                <ul>\n                      {hintQuestions.map((question, index) => (\n                    <li key={index}>{question}</li>\n                      ))}\n                    </ul>\n                  </div>\n              \n              <div className={styles.notes}>\n                <h3>Ваши заметки:</h3>\n                <textarea\n                  value={notes}\n                  onChange={(e) => setNotes(e.target.value)}\n                  placeholder=\"Записывайте здесь свои догадки...\"\n                  className={styles.notesArea}\n                />\n              </div>\n            </>\n          ) : (\n            <div className={styles.waitingRoom}>\n              <h3>Ожидание игроков</h3>\n              <p>В комнате {gameState.players.length} игроков</p>\n              <ul className={styles.playersList}>\n                {gameState.players.map((player, index) => (\n                  <li key={`player-list-${player.id}-${index}`}>\n                    {player.name} {player.isHost && ' (Хост)'}\n                    {player.id === gameState.playerId && ' (Вы)'}\n                  </li>\n                ))}\n              </ul>\n              {gameState.isHost && gameState.players.length >= 2 ? (\n                <p>Можно начинать игру!</p>\n              ) : gameState.isHost ? (\n                <p>Нужно минимум 2 игрока для начала игры</p>\n              ) : (\n                <p>Ожидайте, когда хост начнет игру</p>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {error && (\n        <div className={styles.errorModal}>\n          <div className={styles.errorContent}>\n            <h3>Произошла ошибка</h3>\n            <p>{error}</p>\n            <div className={styles.errorActions}>\n              <button \n                onClick={() => setError('')}\n                className={styles.continueButton}\n              >\n                Продолжить без камеры\n              </button>\n            </div>\n          </div>\n      </div>\n      )}\n\n      {/* Скрытый видео элемент для локального потока */}\n      <video\n        ref={localVideoRef}\n        autoPlay\n        playsInline\n        muted\n        style={{ display: 'none' }}\n      />\n    </div>\n  );\n};\n","import React from 'react';\r\nimport { HomePage } from '@/pages/HomePage';\r\nimport { GamePage } from '@/pages/GamePage';\r\n\r\nexport const routeConfig = {\r\n  main: {\r\n    path: '/',\r\n    element: <HomePage />\r\n  },\r\n  game: {\r\n    path: '/game',\r\n    element: <GamePage />\r\n  }\r\n};\r\n","import { Suspense } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { routeConfig } from '@/shared/config/routeConfig.jsx';\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <Routes>\r\n        {Object.values(routeConfig).map(({ path, element }) => (\r\n          <Route\r\n            key={path}\r\n            path={path}\r\n            element={element}\r\n          />\r\n        ))}\r\n      </Routes>\r\n    </Suspense>\r\n  );\r\n}; ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './Header.module.css';\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.container}>\r\n        <Link to=\"/\" className={styles.logo}>\r\n          <span className={styles.icon}>📋</span>\r\n          <span className={styles.text}>Who Am I?</span>\r\n        </Link>\r\n        \r\n        <div className={styles.actions}>\r\n          <button className={styles.connectButton}>Connect</button>\r\n          <Link to=\"/\" className={styles.createButton}>Create</Link>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}; ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './Footer.module.css';\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <footer className={styles.footer}>\r\n      <div className={styles.container}>\r\n        <div className={styles.copyright}>\r\n          <p>© 2023 Who Am I. All rights reserved.</p>\r\n        </div>\r\n        <div className={styles.links}>\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/about\">About</Link>\r\n          <Link to=\"/privacy\">Privacy</Link>\r\n        </div>\r\n        <div className={styles.social}>\r\n          <a href=\"https://github.com\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"GitHub\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"></path></svg>\r\n          </a>\r\n          <a href=\"https://twitter.com\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"Twitter\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z\"></path></svg>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}; ","import { Header } from '../Header'\r\nimport { Footer } from '../Footer'\r\nimport styles from './Layout.module.css'\r\n\r\nexport const Layout = ({ children }) => {\r\n  return (\r\n    <div className={styles.layout}>\r\n      <Header />\r\n      <main className={styles.main}>\r\n        {children}\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  )\r\n} ","import { BrowserRouter as Router } from 'react-router-dom'\r\nimport { AppRouter } from './app/providers/router/AppRouter'\r\nimport { Layout } from './widgets/Layout/Layout'\r\nimport React from 'react'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename=\"/GithubPagesCoonfigTest\">\r\n      <Layout>\r\n        <AppRouter />\r\n      </Layout>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App ","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.createRoot(document.getElementById('root')).render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n) "],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","reactJsxRuntime_production_min","jsxRuntimeModule","MediasoupApi","roomId","peerId","callback","type","data","resolve","socketApi","response","error","mediasoupApi","SocketApi","serverUrl","available","err","io","reason","attemptNumber","playerId","from","signal","players","offer","answer","candidate","timeout","testSocket","connectionTimeout","playerName","roomCode","enabled","targetPlayerId","character","event","callbacks","index","cb","_a","eventName","targetId","peerConnection","_c","_b","state","HomePage","name","setName","useState","setRoomCode","setError","isLoading","setIsLoading","isConnected","setIsConnected","navigate","useNavigate","useEffect","checkConnection","connected","connectionTimer","handleCreateRoom","handleJoinRoom","jsx","styles","jsxs","arr","size","VideoApi","initiator","initialSignal","options","peer","Peer","videoTrack","stream","canvas","ctx","hue","text","animate","borderWidth","animFrameId","videoTracks","track","audioTracks","id","retryCount","maxRetries","videoApi","PlayerVideo","isCurrentPlayer","isVideoEnabled","isAudioEnabled","muted","videoRef","useRef","hasVideo","setHasVideo","videoError","setVideoError","videoStatus","setVideoStatus","videoElement","handlePlay","handleError","handleLoadedMetadata","handleVideoError","handleVideoPlay","GamePage","location","useLocation","serverStatus","setServerStatus","notes","setNotes","editingCharacter","setEditingCharacter","newCharacter","setNewCharacter","videoEnabled","setVideoEnabled","audioEnabled","setAudioEnabled","localVideoRef","remoteStreams","setRemoteStreams","gameState","setGameState","hintQuestions","getMediaErrorMessage","params","room","isHost","prev","handleRoomUpdated","uniquePlayers","player","self","handleGameStarted","handleCharacterAssigned","handleConnect","handleRemoteStream","handleRemoteStreamRemoved","newStreams","initVideoWithRetry","attempt","localStream","socketId","handleStartGame","handleAssignCharacter","toggleVideo","newState","toggleAudio","handleLeaveGame","Fragment","question","routeConfig","AppRouter","Suspense","Routes","path","element","Route","Header","Link","Footer","Layout","children","App","Router","ReactDOM","React"],"mappings":"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","x_google_ignoreList":[0,1,2]}